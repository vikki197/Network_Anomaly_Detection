{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN3SNZtZpFWwScOQLOFpAIt"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"vYu7lPSoU4JG","executionInfo":{"status":"ok","timestamp":1735537677151,"user_tz":-330,"elapsed":2957,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["sns.set_style('darkgrid')\n","pd.set_option('display.max_columns', None)"],"metadata":{"id":"3YW-JeWJVH_0","executionInfo":{"status":"ok","timestamp":1735537677152,"user_tz":-330,"elapsed":3,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv('Network_anomaly_data.csv')\n","df['is_attack'] = df['attack'].apply(lambda x: 'normal' if x=='normal' else 'attack')\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"ivwKGXJRVnHc","executionInfo":{"status":"ok","timestamp":1735537677862,"user_tz":-330,"elapsed":713,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"99b0b15e-96ff-4024-8354-bf53af04a538"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   duration protocoltype   service flag  srcbytes  dstbytes  land  \\\n","0         0          tcp  ftp_data   SF       491         0     0   \n","1         0          udp     other   SF       146         0     0   \n","2         0          tcp   private   S0         0         0     0   \n","3         0          tcp      http   SF       232      8153     0   \n","4         0          tcp      http   SF       199       420     0   \n","\n","   wrongfragment  urgent  hot  numfailedlogins  loggedin  numcompromised  \\\n","0              0       0    0                0         0               0   \n","1              0       0    0                0         0               0   \n","2              0       0    0                0         0               0   \n","3              0       0    0                0         1               0   \n","4              0       0    0                0         1               0   \n","\n","   rootshell  suattempted  numroot  numfilecreations  numshells  \\\n","0          0            0        0                 0          0   \n","1          0            0        0                 0          0   \n","2          0            0        0                 0          0   \n","3          0            0        0                 0          0   \n","4          0            0        0                 0          0   \n","\n","   numaccessfiles  numoutboundcmds  ishostlogin  isguestlogin  count  \\\n","0               0                0            0             0      2   \n","1               0                0            0             0     13   \n","2               0                0            0             0    123   \n","3               0                0            0             0      5   \n","4               0                0            0             0     30   \n","\n","   srvcount  serrorrate  srvserrorrate  rerrorrate  srvrerrorrate  \\\n","0         2         0.0            0.0         0.0            0.0   \n","1         1         0.0            0.0         0.0            0.0   \n","2         6         1.0            1.0         0.0            0.0   \n","3         5         0.2            0.2         0.0            0.0   \n","4        32         0.0            0.0         0.0            0.0   \n","\n","   samesrvrate  diffsrvrate  srvdiffhostrate  dsthostcount  dsthostsrvcount  \\\n","0         1.00         0.00             0.00           150               25   \n","1         0.08         0.15             0.00           255                1   \n","2         0.05         0.07             0.00           255               26   \n","3         1.00         0.00             0.00            30              255   \n","4         1.00         0.00             0.09           255              255   \n","\n","   dsthostsamesrvrate  dsthostdiffsrvrate  dsthostsamesrcportrate  \\\n","0                0.17                0.03                    0.17   \n","1                0.00                0.60                    0.88   \n","2                0.10                0.05                    0.00   \n","3                1.00                0.00                    0.03   \n","4                1.00                0.00                    0.00   \n","\n","   dsthostsrvdiffhostrate  dsthostserrorrate  dsthostsrvserrorrate  \\\n","0                    0.00               0.00                  0.00   \n","1                    0.00               0.00                  0.00   \n","2                    0.00               1.00                  1.00   \n","3                    0.04               0.03                  0.01   \n","4                    0.00               0.00                  0.00   \n","\n","   dsthostrerrorrate  dsthostsrvrerrorrate   attack  lastflag is_attack  \n","0               0.05                  0.00   normal        20    normal  \n","1               0.00                  0.00   normal        15    normal  \n","2               0.00                  0.00  neptune        19    attack  \n","3               0.00                  0.01   normal        21    normal  \n","4               0.00                  0.00   normal        21    normal  "],"text/html":["\n","  <div id=\"df-25a79708-7f9c-45b4-ad5e-c71a140fdfce\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>duration</th>\n","      <th>protocoltype</th>\n","      <th>service</th>\n","      <th>flag</th>\n","      <th>srcbytes</th>\n","      <th>dstbytes</th>\n","      <th>land</th>\n","      <th>wrongfragment</th>\n","      <th>urgent</th>\n","      <th>hot</th>\n","      <th>numfailedlogins</th>\n","      <th>loggedin</th>\n","      <th>numcompromised</th>\n","      <th>rootshell</th>\n","      <th>suattempted</th>\n","      <th>numroot</th>\n","      <th>numfilecreations</th>\n","      <th>numshells</th>\n","      <th>numaccessfiles</th>\n","      <th>numoutboundcmds</th>\n","      <th>ishostlogin</th>\n","      <th>isguestlogin</th>\n","      <th>count</th>\n","      <th>srvcount</th>\n","      <th>serrorrate</th>\n","      <th>srvserrorrate</th>\n","      <th>rerrorrate</th>\n","      <th>srvrerrorrate</th>\n","      <th>samesrvrate</th>\n","      <th>diffsrvrate</th>\n","      <th>srvdiffhostrate</th>\n","      <th>dsthostcount</th>\n","      <th>dsthostsrvcount</th>\n","      <th>dsthostsamesrvrate</th>\n","      <th>dsthostdiffsrvrate</th>\n","      <th>dsthostsamesrcportrate</th>\n","      <th>dsthostsrvdiffhostrate</th>\n","      <th>dsthostserrorrate</th>\n","      <th>dsthostsrvserrorrate</th>\n","      <th>dsthostrerrorrate</th>\n","      <th>dsthostsrvrerrorrate</th>\n","      <th>attack</th>\n","      <th>lastflag</th>\n","      <th>is_attack</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>tcp</td>\n","      <td>ftp_data</td>\n","      <td>SF</td>\n","      <td>491</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>150</td>\n","      <td>25</td>\n","      <td>0.17</td>\n","      <td>0.03</td>\n","      <td>0.17</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.05</td>\n","      <td>0.00</td>\n","      <td>normal</td>\n","      <td>20</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>udp</td>\n","      <td>other</td>\n","      <td>SF</td>\n","      <td>146</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.08</td>\n","      <td>0.15</td>\n","      <td>0.00</td>\n","      <td>255</td>\n","      <td>1</td>\n","      <td>0.00</td>\n","      <td>0.60</td>\n","      <td>0.88</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>normal</td>\n","      <td>15</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>tcp</td>\n","      <td>private</td>\n","      <td>S0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>123</td>\n","      <td>6</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.05</td>\n","      <td>0.07</td>\n","      <td>0.00</td>\n","      <td>255</td>\n","      <td>26</td>\n","      <td>0.10</td>\n","      <td>0.05</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>1.00</td>\n","      <td>1.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>neptune</td>\n","      <td>19</td>\n","      <td>attack</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>tcp</td>\n","      <td>http</td>\n","      <td>SF</td>\n","      <td>232</td>\n","      <td>8153</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>0.2</td>\n","      <td>0.2</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>30</td>\n","      <td>255</td>\n","      <td>1.00</td>\n","      <td>0.00</td>\n","      <td>0.03</td>\n","      <td>0.04</td>\n","      <td>0.03</td>\n","      <td>0.01</td>\n","      <td>0.00</td>\n","      <td>0.01</td>\n","      <td>normal</td>\n","      <td>21</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>tcp</td>\n","      <td>http</td>\n","      <td>SF</td>\n","      <td>199</td>\n","      <td>420</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>30</td>\n","      <td>32</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.00</td>\n","      <td>0.00</td>\n","      <td>0.09</td>\n","      <td>255</td>\n","      <td>255</td>\n","      <td>1.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>normal</td>\n","      <td>21</td>\n","      <td>normal</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-25a79708-7f9c-45b4-ad5e-c71a140fdfce')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-25a79708-7f9c-45b4-ad5e-c71a140fdfce button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-25a79708-7f9c-45b4-ad5e-c71a140fdfce');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f983eae5-7630-4a7b-af68-a17eec2f97eb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f983eae5-7630-4a7b-af68-a17eec2f97eb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f983eae5-7630-4a7b-af68-a17eec2f97eb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":[],"metadata":{"id":"qInhgUXLVvK2","executionInfo":{"status":"ok","timestamp":1735537677862,"user_tz":-330,"elapsed":31,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"fKauE36jVw5H","executionInfo":{"status":"ok","timestamp":1735537677862,"user_tz":-330,"elapsed":31,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["df['count'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"Dj6GrX3UVxBn","executionInfo":{"status":"ok","timestamp":1735537677862,"user_tz":-330,"elapsed":31,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"fbcc6347-2fd3-488b-e63a-e7340f95d66b"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count\n","1      27763\n","2       9474\n","3       3962\n","4       3550\n","5       2980\n","       ...  \n","413        4\n","498        4\n","504        3\n","506        3\n","505        2\n","Name: count, Length: 512, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>count</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>27763</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>9474</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3962</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3550</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2980</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>413</th>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>504</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>506</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>505</th>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>512 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df['count'].nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QmNjiaXyV4xn","executionInfo":{"status":"ok","timestamp":1735537677862,"user_tz":-330,"elapsed":30,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"1cb8606f-1c5b-4ebf-b5cc-362af5b9fea6"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["512"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["np.percentile(df['count'],75),np.percentile(df['count'],50),np.percentile(df['count'],25)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jDkMAicHYuh5","executionInfo":{"status":"ok","timestamp":1735537677862,"user_tz":-330,"elapsed":28,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"3b1b9c7a-a327-47c5-abcb-af968e4819a0"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(143.0, 14.0, 2.0)"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["pd.DataFrame(df['count'].describe()).T"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":81},"id":"qh8O9-SubkNU","executionInfo":{"status":"ok","timestamp":1735537677863,"user_tz":-330,"elapsed":28,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"4c1e07d2-318e-48a3-a80d-e9cafdba1824"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          count       mean         std  min  25%   50%    75%    max\n","count  125973.0  84.107555  114.508607  0.0  2.0  14.0  143.0  511.0"],"text/html":["\n","  <div id=\"df-1adae970-deb3-4479-8610-f62978c5aa70\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>125973.0</td>\n","      <td>84.107555</td>\n","      <td>114.508607</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>14.0</td>\n","      <td>143.0</td>\n","      <td>511.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1adae970-deb3-4479-8610-f62978c5aa70')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1adae970-deb3-4479-8610-f62978c5aa70 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1adae970-deb3-4479-8610-f62978c5aa70');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 125973.0,\n        \"max\": 125973.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          125973.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 84.1075547934875,\n        \"max\": 84.1075547934875,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          84.1075547934875\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 114.50860735425304,\n        \"max\": 114.50860735425304,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          114.50860735425304\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"25%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 2.0,\n        \"max\": 2.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"50%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 14.0,\n        \"max\": 14.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          14.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"75%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 143.0,\n        \"max\": 143.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          143.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 511.0,\n        \"max\": 511.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          511.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["IQR = np.percentile(df['count'],75)-np.percentile(df['count'],25)\n","ulimit = np.percentile(df['count'],75)+ (1.5*IQR)\n","ulimit"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pQ34C-jHYyrs","executionInfo":{"status":"ok","timestamp":1735537677863,"user_tz":-330,"elapsed":27,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"071991e2-22bf-494f-8a71-ac0953d746bb"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["354.5"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["not_outlier = df[df['count'] <= ulimit]\n","is_outlier = df[df['count'] > ulimit]"],"metadata":{"id":"9k0NSIBFbMHP","executionInfo":{"status":"ok","timestamp":1735537677863,"user_tz":-330,"elapsed":26,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["is_outlier['attack'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":272},"id":"gJAhJz7HbRRe","executionInfo":{"status":"ok","timestamp":1735537677870,"user_tz":-330,"elapsed":32,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"519f4d08-61a2-42d1-ea4e-e74e09389c42"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["attack\n","smurf        1710\n","satan        1208\n","normal        149\n","portsweep      89\n","nmap            1\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>attack</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>smurf</th>\n","      <td>1710</td>\n","    </tr>\n","    <tr>\n","      <th>satan</th>\n","      <td>1208</td>\n","    </tr>\n","    <tr>\n","      <th>normal</th>\n","      <td>149</td>\n","    </tr>\n","    <tr>\n","      <th>portsweep</th>\n","      <td>89</td>\n","    </tr>\n","    <tr>\n","      <th>nmap</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["not_outlier[not_outlier['attack']!='normal']['attack'].value_counts().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UYRRcQSQbbND","executionInfo":{"status":"ok","timestamp":1735537677870,"user_tz":-330,"elapsed":32,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"73d9c689-88e1-4483-ff64-d8ea8102ae10"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["55622"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["# 97% data not outliers\n","100*not_outlier.shape[0]/df.shape[0],100*is_outlier.shape[0]/df.shape[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jLlWWTnjcm2l","executionInfo":{"status":"ok","timestamp":1735537677870,"user_tz":-330,"elapsed":30,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"1b0005b2-45ce-4ce2-fb4c-7b2d97563457"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(97.49390742460686, 2.50609257539314)"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["is_outlier.shape[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jEYUt25AhT5e","executionInfo":{"status":"ok","timestamp":1735537677870,"user_tz":-330,"elapsed":29,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"dfd6a452-95e9-4715-dd0b-559ad3db9cdb"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3157"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["plt.figure(figsize=(12,5))\n","plt.subplot(1,2,1)\n","sns.boxplot(data=df,x='count')\n","plt.subplot(1,2,2)\n","sns.kdeplot(data=df,x='count')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":482},"id":"W1AIqFW9Y9sB","executionInfo":{"status":"ok","timestamp":1735537679591,"user_tz":-330,"elapsed":1749,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"b700a769-4227-40c4-90d6-f520d31681ea"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='count', ylabel='Density'>"]},"metadata":{},"execution_count":14},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# atatcks like neptune, teardrop, satan, smurf has high counts\n","sns.boxplot(data=df,x='count',hue='attack')\n","plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":540},"id":"PyQsAG7TZGj0","executionInfo":{"status":"ok","timestamp":1735537680788,"user_tz":-330,"elapsed":1200,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"8c1120fd-f38c-4ab0-fab6-c3765a1a0c37"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7daae7c116f0>"]},"metadata":{},"execution_count":15},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["cdf = df.copy()\n","cdf['attk'] = cdf['attack'].apply(lambda x: 0 if x == 'normal' else 1)\n","cdf['bins'] = None\n","for i in range(len(cdf)):\n","  count = cdf.loc[i,'count']\n","  if count > 0 and count <= 100:\n","    cdf.loc[i,'bins'] = 1\n","  elif count> 100 and count <= 200:\n","    cdf.loc[i,'bins'] = 2\n","  elif count> 200 and count <= 300:\n","    cdf.loc[i,'bins'] = 3\n","  elif count > 300 and count <= 400:\n","    cdf.loc[i,'bins'] = 4\n","  else:\n","    cdf.loc[i,'bins'] = 5"],"metadata":{"id":"rV2WZWIIbqam","executionInfo":{"status":"ok","timestamp":1735537710515,"user_tz":-330,"elapsed":29739,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["cdf['bins'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":272},"id":"ZX3_di8acYsx","executionInfo":{"status":"ok","timestamp":1735537710516,"user_tz":-330,"elapsed":19,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"bd865766-5306-4805-d45a-16b82abb36ee"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["bins\n","1    82022\n","3    20671\n","2    19481\n","5     2844\n","4      955\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>bins</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>82022</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>20671</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>19481</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2844</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>955</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["# higher the bin, higher the count, more percentage of attacks\n","pd.pivot_table(data=cdf,index='bins',columns='is_attack',values='attk',aggfunc='count')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"FYQGSOjneScN","executionInfo":{"status":"ok","timestamp":1735537710516,"user_tz":-330,"elapsed":17,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"8d3e8de7-4d75-4cd9-954e-44d730e9ff97"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["is_attack  attack  normal\n","bins                     \n","1           19656   62366\n","2           16466    3015\n","3           19133    1538\n","4             646     309\n","5            2729     115"],"text/html":["\n","  <div id=\"df-146bd6f8-8040-4e89-904e-94c99f5452d6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>is_attack</th>\n","      <th>attack</th>\n","      <th>normal</th>\n","    </tr>\n","    <tr>\n","      <th>bins</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>19656</td>\n","      <td>62366</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>16466</td>\n","      <td>3015</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>19133</td>\n","      <td>1538</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>646</td>\n","      <td>309</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2729</td>\n","      <td>115</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-146bd6f8-8040-4e89-904e-94c99f5452d6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-146bd6f8-8040-4e89-904e-94c99f5452d6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-146bd6f8-8040-4e89-904e-94c99f5452d6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4db3e000-de9f-467e-b063-1589a7bd29bc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4db3e000-de9f-467e-b063-1589a7bd29bc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4db3e000-de9f-467e-b063-1589a7bd29bc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"bins\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          5,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9272,\n        \"min\": 646,\n        \"max\": 19656,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          16466,\n          2729,\n          19133\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"normal\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 27359,\n        \"min\": 115,\n        \"max\": 62366,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3015,\n          115,\n          1538\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["pd.pivot_table(data=cdf,index='bins',columns='is_attack',values='attk',aggfunc='sum')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"Z97OwBHHeh1Z","executionInfo":{"status":"ok","timestamp":1735537710516,"user_tz":-330,"elapsed":16,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"3cf71972-2655-4631-d19a-09520fca0b25"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["is_attack  attack  normal\n","bins                     \n","1           19656       0\n","2           16466       0\n","3           19133       0\n","4             646       0\n","5            2729       0"],"text/html":["\n","  <div id=\"df-cafcc658-afe1-4d99-a872-fcf2eb6b355c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>is_attack</th>\n","      <th>attack</th>\n","      <th>normal</th>\n","    </tr>\n","    <tr>\n","      <th>bins</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>19656</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>16466</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>19133</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>646</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2729</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cafcc658-afe1-4d99-a872-fcf2eb6b355c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cafcc658-afe1-4d99-a872-fcf2eb6b355c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cafcc658-afe1-4d99-a872-fcf2eb6b355c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cdccd346-6aef-4f29-9dbc-3be01548c5be\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cdccd346-6aef-4f29-9dbc-3be01548c5be')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cdccd346-6aef-4f29-9dbc-3be01548c5be button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"bins\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          5,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9272,\n        \"min\": 646,\n        \"max\": 19656,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          16466,\n          2729,\n          19133\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"normal\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["cattack = pd.pivot_table(data=cdf,index='attack',columns='bins',values='attk',aggfunc='count',margins=True).reset_index().sort_values('All',ascending=False)\n","#cattack.drop('All',axis=1,inplace=True)\n","cattack.drop([23,11],axis=0,inplace=True)\n","cattack.reset_index(inplace=True)\n","cattack.drop('index',axis=1,inplace=True)\n","cattack"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":739},"id":"GBB1yT8Senyh","executionInfo":{"status":"ok","timestamp":1735537710985,"user_tz":-330,"elapsed":484,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"50af98f1-cf1e-4135-d813-cf54e61e3844"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["bins           attack       1        2        3      4       5    All\n","0             neptune  6989.0  15657.0  18561.0    7.0     NaN  41214\n","1               satan  1633.0    383.0    252.0  288.0  1077.0   3633\n","2             ipsweep  3598.0      NaN      NaN    NaN     1.0   3599\n","3           portsweep  2621.0     91.0     50.0  120.0    49.0   2931\n","4               smurf   306.0    238.0    270.0  231.0  1601.0   2646\n","5                nmap  1492.0      NaN      NaN    NaN     1.0   1493\n","6                back   956.0      NaN      NaN    NaN     NaN    956\n","7            teardrop   796.0     96.0      NaN    NaN     NaN    892\n","8         warezclient   890.0      NaN      NaN    NaN     NaN    890\n","9                 pod   201.0      NaN      NaN    NaN     NaN    201\n","10       guess_passwd    53.0      NaN      NaN    NaN     NaN     53\n","11    buffer_overflow    29.0      1.0      NaN    NaN     NaN     30\n","12        warezmaster    20.0      NaN      NaN    NaN     NaN     20\n","13               land    18.0      NaN      NaN    NaN     NaN     18\n","14               imap    11.0      NaN      NaN    NaN     NaN     11\n","15            rootkit    10.0      NaN      NaN    NaN     NaN     10\n","16         loadmodule     9.0      NaN      NaN    NaN     NaN      9\n","17          ftp_write     8.0      NaN      NaN    NaN     NaN      8\n","18           multihop     7.0      NaN      NaN    NaN     NaN      7\n","19                phf     4.0      NaN      NaN    NaN     NaN      4\n","20               perl     3.0      NaN      NaN    NaN     NaN      3\n","21                spy     2.0      NaN      NaN    NaN     NaN      2"],"text/html":["\n","  <div id=\"df-76010e44-b51b-465d-bd45-115c9befabc9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>bins</th>\n","      <th>attack</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>All</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>neptune</td>\n","      <td>6989.0</td>\n","      <td>15657.0</td>\n","      <td>18561.0</td>\n","      <td>7.0</td>\n","      <td>NaN</td>\n","      <td>41214</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>satan</td>\n","      <td>1633.0</td>\n","      <td>383.0</td>\n","      <td>252.0</td>\n","      <td>288.0</td>\n","      <td>1077.0</td>\n","      <td>3633</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ipsweep</td>\n","      <td>3598.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>3599</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>portsweep</td>\n","      <td>2621.0</td>\n","      <td>91.0</td>\n","      <td>50.0</td>\n","      <td>120.0</td>\n","      <td>49.0</td>\n","      <td>2931</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>smurf</td>\n","      <td>306.0</td>\n","      <td>238.0</td>\n","      <td>270.0</td>\n","      <td>231.0</td>\n","      <td>1601.0</td>\n","      <td>2646</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>nmap</td>\n","      <td>1492.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>1493</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>back</td>\n","      <td>956.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>956</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>teardrop</td>\n","      <td>796.0</td>\n","      <td>96.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>892</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>warezclient</td>\n","      <td>890.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>890</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>pod</td>\n","      <td>201.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>201</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>guess_passwd</td>\n","      <td>53.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>buffer_overflow</td>\n","      <td>29.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>warezmaster</td>\n","      <td>20.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>land</td>\n","      <td>18.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>imap</td>\n","      <td>11.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>rootkit</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>loadmodule</td>\n","      <td>9.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>ftp_write</td>\n","      <td>8.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>multihop</td>\n","      <td>7.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>phf</td>\n","      <td>4.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>perl</td>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>spy</td>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-76010e44-b51b-465d-bd45-115c9befabc9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-76010e44-b51b-465d-bd45-115c9befabc9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-76010e44-b51b-465d-bd45-115c9befabc9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-28cc009a-8482-4749-9051-c0c74363f65b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-28cc009a-8482-4749-9051-c0c74363f65b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-28cc009a-8482-4749-9051-c0c74363f65b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_37188dc7-4a40-43f7-8afd-8bd06b7ecfd0\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cattack')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_37188dc7-4a40-43f7-8afd-8bd06b7ecfd0 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('cattack');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cattack","summary":"{\n  \"name\": \"cattack\",\n  \"rows\": 22,\n  \"fields\": [\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 22,\n        \"samples\": [\n          \"neptune\",\n          \"land\",\n          \"warezclient\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1668.6305113924363,\n        \"min\": 2.0,\n        \"max\": 6989.0,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          6989.0,\n          18.0,\n          890.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6327.310444941569,\n        \"min\": 1.0,\n        \"max\": 15657.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          15657.0,\n          383.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9185.708151797551,\n        \"min\": 50.0,\n        \"max\": 18561.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          252.0,\n          270.0,\n          18561.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 124.39855304624729,\n        \"min\": 7.0,\n        \"max\": 288.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          288.0,\n          231.0,\n          7.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 5,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 747.6705156684995,\n        \"min\": 1.0,\n        \"max\": 1601.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1.0,\n          1601.0,\n          1077.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8698,\n        \"min\": 2,\n        \"max\": 41214,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          41214,\n          18,\n          890\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["cattack.sort_values(2,ascending=False).head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"LIp_rF5DhB_J","executionInfo":{"status":"ok","timestamp":1735537710985,"user_tz":-330,"elapsed":28,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"fe51ebe5-914a-4066-f17e-5514030c5ad6"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["bins     attack       1        2        3      4       5    All\n","0       neptune  6989.0  15657.0  18561.0    7.0     NaN  41214\n","1         satan  1633.0    383.0    252.0  288.0  1077.0   3633\n","4         smurf   306.0    238.0    270.0  231.0  1601.0   2646\n","7      teardrop   796.0     96.0      NaN    NaN     NaN    892\n","3     portsweep  2621.0     91.0     50.0  120.0    49.0   2931"],"text/html":["\n","  <div id=\"df-a0b5ce30-030f-4ddd-b3ea-c0cca3093e48\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>bins</th>\n","      <th>attack</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>All</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>neptune</td>\n","      <td>6989.0</td>\n","      <td>15657.0</td>\n","      <td>18561.0</td>\n","      <td>7.0</td>\n","      <td>NaN</td>\n","      <td>41214</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>satan</td>\n","      <td>1633.0</td>\n","      <td>383.0</td>\n","      <td>252.0</td>\n","      <td>288.0</td>\n","      <td>1077.0</td>\n","      <td>3633</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>smurf</td>\n","      <td>306.0</td>\n","      <td>238.0</td>\n","      <td>270.0</td>\n","      <td>231.0</td>\n","      <td>1601.0</td>\n","      <td>2646</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>teardrop</td>\n","      <td>796.0</td>\n","      <td>96.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>892</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>portsweep</td>\n","      <td>2621.0</td>\n","      <td>91.0</td>\n","      <td>50.0</td>\n","      <td>120.0</td>\n","      <td>49.0</td>\n","      <td>2931</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a0b5ce30-030f-4ddd-b3ea-c0cca3093e48')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a0b5ce30-030f-4ddd-b3ea-c0cca3093e48 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a0b5ce30-030f-4ddd-b3ea-c0cca3093e48');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9d003952-0939-442c-a026-3c7e385fef96\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9d003952-0939-442c-a026-3c7e385fef96')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9d003952-0939-442c-a026-3c7e385fef96 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"cattack\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"satan\",\n          \"portsweep\",\n          \"smurf\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2675.3456785993094,\n        \"min\": 306.0,\n        \"max\": 6989.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1633.0,\n          2621.0,\n          306.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6912.728007089531,\n        \"min\": 91.0,\n        \"max\": 15657.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          383.0,\n          91.0,\n          238.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9185.708151797551,\n        \"min\": 50.0,\n        \"max\": 18561.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          252.0,\n          50.0,\n          18561.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 124.39855304624729,\n        \"min\": 7.0,\n        \"max\": 288.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          288.0,\n          120.0,\n          7.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 5,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 789.5213739981965,\n        \"min\": 49.0,\n        \"max\": 1601.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1077.0,\n          1601.0,\n          49.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17331,\n        \"min\": 892,\n        \"max\": 41214,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3633,\n          2931,\n          2646\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["cattack.sort_values(3,ascending=False).head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"HLBZwiQ2hd0i","executionInfo":{"status":"ok","timestamp":1735537710985,"user_tz":-330,"elapsed":26,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"4d8d4149-1c9d-45ab-e914-b084982542ea"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["bins     attack       1        2        3      4       5    All\n","0       neptune  6989.0  15657.0  18561.0    7.0     NaN  41214\n","4         smurf   306.0    238.0    270.0  231.0  1601.0   2646\n","1         satan  1633.0    383.0    252.0  288.0  1077.0   3633\n","3     portsweep  2621.0     91.0     50.0  120.0    49.0   2931\n","2       ipsweep  3598.0      NaN      NaN    NaN     1.0   3599"],"text/html":["\n","  <div id=\"df-defc7330-60e4-498e-9d14-7bcb372d2773\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>bins</th>\n","      <th>attack</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>All</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>neptune</td>\n","      <td>6989.0</td>\n","      <td>15657.0</td>\n","      <td>18561.0</td>\n","      <td>7.0</td>\n","      <td>NaN</td>\n","      <td>41214</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>smurf</td>\n","      <td>306.0</td>\n","      <td>238.0</td>\n","      <td>270.0</td>\n","      <td>231.0</td>\n","      <td>1601.0</td>\n","      <td>2646</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>satan</td>\n","      <td>1633.0</td>\n","      <td>383.0</td>\n","      <td>252.0</td>\n","      <td>288.0</td>\n","      <td>1077.0</td>\n","      <td>3633</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>portsweep</td>\n","      <td>2621.0</td>\n","      <td>91.0</td>\n","      <td>50.0</td>\n","      <td>120.0</td>\n","      <td>49.0</td>\n","      <td>2931</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ipsweep</td>\n","      <td>3598.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>3599</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-defc7330-60e4-498e-9d14-7bcb372d2773')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-defc7330-60e4-498e-9d14-7bcb372d2773 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-defc7330-60e4-498e-9d14-7bcb372d2773');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cf2d0cfc-f7f6-4a3b-8670-da4492109247\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cf2d0cfc-f7f6-4a3b-8670-da4492109247')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cf2d0cfc-f7f6-4a3b-8670-da4492109247 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"cattack\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"smurf\",\n          \"ipsweep\",\n          \"satan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2526.626664151235,\n        \"min\": 306.0,\n        \"max\": 6989.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          306.0,\n          3598.0,\n          1633.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7710.754886304367,\n        \"min\": 91.0,\n        \"max\": 15657.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          238.0,\n          91.0,\n          15657.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9185.708151797551,\n        \"min\": 50.0,\n        \"max\": 18561.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          270.0,\n          50.0,\n          18561.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 124.39855304624729,\n        \"min\": 7.0,\n        \"max\": 288.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          231.0,\n          120.0,\n          7.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 5,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 788.4660212505461,\n        \"min\": 1.0,\n        \"max\": 1601.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1077.0,\n          1.0,\n          1601.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17004,\n        \"min\": 2646,\n        \"max\": 41214,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2646,\n          3599,\n          3633\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["cattack.sort_values(4,ascending=False).head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"BXZMaDkfhgRQ","executionInfo":{"status":"ok","timestamp":1735537710985,"user_tz":-330,"elapsed":25,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"eefcae6a-4a6e-4b1f-cf94-ffe11d7eca6d"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["bins     attack       1        2        3      4       5    All\n","1         satan  1633.0    383.0    252.0  288.0  1077.0   3633\n","4         smurf   306.0    238.0    270.0  231.0  1601.0   2646\n","3     portsweep  2621.0     91.0     50.0  120.0    49.0   2931\n","0       neptune  6989.0  15657.0  18561.0    7.0     NaN  41214\n","2       ipsweep  3598.0      NaN      NaN    NaN     1.0   3599"],"text/html":["\n","  <div id=\"df-97208310-a938-47c6-b508-e9bbd0a66633\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>bins</th>\n","      <th>attack</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>All</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>satan</td>\n","      <td>1633.0</td>\n","      <td>383.0</td>\n","      <td>252.0</td>\n","      <td>288.0</td>\n","      <td>1077.0</td>\n","      <td>3633</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>smurf</td>\n","      <td>306.0</td>\n","      <td>238.0</td>\n","      <td>270.0</td>\n","      <td>231.0</td>\n","      <td>1601.0</td>\n","      <td>2646</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>portsweep</td>\n","      <td>2621.0</td>\n","      <td>91.0</td>\n","      <td>50.0</td>\n","      <td>120.0</td>\n","      <td>49.0</td>\n","      <td>2931</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>neptune</td>\n","      <td>6989.0</td>\n","      <td>15657.0</td>\n","      <td>18561.0</td>\n","      <td>7.0</td>\n","      <td>NaN</td>\n","      <td>41214</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ipsweep</td>\n","      <td>3598.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>3599</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97208310-a938-47c6-b508-e9bbd0a66633')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-97208310-a938-47c6-b508-e9bbd0a66633 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-97208310-a938-47c6-b508-e9bbd0a66633');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-689d9e40-003a-48e5-abd1-bb33f780cb5d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-689d9e40-003a-48e5-abd1-bb33f780cb5d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-689d9e40-003a-48e5-abd1-bb33f780cb5d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"cattack\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"smurf\",\n          \"ipsweep\",\n          \"portsweep\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2526.6266641512357,\n        \"min\": 306.0,\n        \"max\": 6989.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          306.0,\n          3598.0,\n          2621.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7710.754886304367,\n        \"min\": 91.0,\n        \"max\": 15657.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          238.0,\n          15657.0,\n          383.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9185.708151797551,\n        \"min\": 50.0,\n        \"max\": 18561.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          270.0,\n          18561.0,\n          252.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 124.39855304624729,\n        \"min\": 7.0,\n        \"max\": 288.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          231.0,\n          7.0,\n          288.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 5,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 788.4660212505461,\n        \"min\": 1.0,\n        \"max\": 1601.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1601.0,\n          1.0,\n          1077.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17004,\n        \"min\": 2646,\n        \"max\": 41214,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2646,\n          3599,\n          2931\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["cattack.sort_values(5,ascending=False).head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"AcrB3az9hi_z","executionInfo":{"status":"ok","timestamp":1735537710985,"user_tz":-330,"elapsed":23,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"acfd8a11-4ece-4d91-eac0-4758754fe163"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["bins     attack       1      2      3      4       5   All\n","4         smurf   306.0  238.0  270.0  231.0  1601.0  2646\n","1         satan  1633.0  383.0  252.0  288.0  1077.0  3633\n","3     portsweep  2621.0   91.0   50.0  120.0    49.0  2931\n","2       ipsweep  3598.0    NaN    NaN    NaN     1.0  3599\n","5          nmap  1492.0    NaN    NaN    NaN     1.0  1493"],"text/html":["\n","  <div id=\"df-a7aeda9c-3130-4f66-b9d6-b179cf27044b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>bins</th>\n","      <th>attack</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>All</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4</th>\n","      <td>smurf</td>\n","      <td>306.0</td>\n","      <td>238.0</td>\n","      <td>270.0</td>\n","      <td>231.0</td>\n","      <td>1601.0</td>\n","      <td>2646</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>satan</td>\n","      <td>1633.0</td>\n","      <td>383.0</td>\n","      <td>252.0</td>\n","      <td>288.0</td>\n","      <td>1077.0</td>\n","      <td>3633</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>portsweep</td>\n","      <td>2621.0</td>\n","      <td>91.0</td>\n","      <td>50.0</td>\n","      <td>120.0</td>\n","      <td>49.0</td>\n","      <td>2931</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ipsweep</td>\n","      <td>3598.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>3599</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>nmap</td>\n","      <td>1492.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>1493</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a7aeda9c-3130-4f66-b9d6-b179cf27044b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a7aeda9c-3130-4f66-b9d6-b179cf27044b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a7aeda9c-3130-4f66-b9d6-b179cf27044b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-72ae896e-48bb-40a3-8eb9-2c781d9f44b5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-72ae896e-48bb-40a3-8eb9-2c781d9f44b5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-72ae896e-48bb-40a3-8eb9-2c781d9f44b5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"cattack\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"satan\",\n          \"nmap\",\n          \"portsweep\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1242.6920374734843,\n        \"min\": 306.0,\n        \"max\": 3598.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1633.0,\n          1492.0,\n          2621.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 146.00114154804865,\n        \"min\": 91.0,\n        \"max\": 383.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          238.0,\n          383.0,\n          91.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 122.1529096392441,\n        \"min\": 50.0,\n        \"max\": 270.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          270.0,\n          252.0,\n          50.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 85.43418519538885,\n        \"min\": 120.0,\n        \"max\": 288.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          231.0,\n          288.0,\n          120.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 5,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 747.6705156684995,\n        \"min\": 1.0,\n        \"max\": 1601.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1077.0,\n          1.0,\n          1601.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 875,\n        \"min\": 1493,\n        \"max\": 3633,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3633,\n          1493,\n          2931\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["# checking bins within 100\n","c100 = cdf[cdf['bins'] == 1].copy()\n","c100.reset_index(inplace=True)\n","c100['nbins'] = None\n","for i in range(len(c100)):\n","  count = c100.loc[i,'count']\n","  if count > 0 and count <= 10:\n","    c100.loc[i,'nbins'] = 1\n","  elif count> 10 and count <= 20:\n","    c100.loc[i,'nbins'] = 2\n","  elif count> 20 and count <= 30:\n","    c100.loc[i,'nbins'] = 3\n","  elif count > 30 and count <= 40:\n","    c100.loc[i,'nbins'] = 4\n","  elif count > 40 and count <= 50:\n","    c100.loc[i,'nbins'] = 5\n","  elif count > 50 and count <= 60:\n","    c100.loc[i,'nbins'] = 6\n","  elif count > 60 and count <= 70:\n","    c100.loc[i,'nbins'] = 7\n","  elif count > 70 and count <= 80:\n","    c100.loc[i,'nbins'] = 8\n","  elif count > 80 and count <= 90:\n","    c100.loc[i,'nbins'] = 9\n","  elif count > 90 and count <= 100:\n","    c100.loc[i,'nbins'] = 10"],"metadata":{"id":"rJ_WpMwChsaf","executionInfo":{"status":"ok","timestamp":1735537729755,"user_tz":-330,"elapsed":18790,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["c100['nbins'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":429},"id":"gmQBXd4GjHie","executionInfo":{"status":"ok","timestamp":1735537729755,"user_tz":-330,"elapsed":28,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"24338dfe-8e2e-45c0-8c59-06767f4ac145"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["nbins\n","1     57691\n","2     10578\n","3      4342\n","4      2163\n","8      1732\n","7      1434\n","5      1180\n","10     1047\n","6       981\n","9       874\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>nbins</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>57691</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10578</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4342</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2163</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1732</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1434</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1180</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>1047</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>981</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>874</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["# as we cross 50, the attack percentage is increasing considerably\n","pd.pivot_table(data=c100,index='nbins',columns='is_attack',values='attk',aggfunc='count')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"Z5jf6y21jNA3","executionInfo":{"status":"ok","timestamp":1735537729756,"user_tz":-330,"elapsed":27,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"549449b6-1ba7-4cc5-9095-448e29a629f9"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["is_attack  attack  normal\n","nbins                    \n","1           11055   46636\n","2            1469    9109\n","3            1232    3110\n","4             996    1167\n","5             791     389\n","6             795     186\n","7             819     615\n","8             873     859\n","9             705     169\n","10            921     126"],"text/html":["\n","  <div id=\"df-f13dedf4-10a9-4325-91f8-9f40c17af871\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>is_attack</th>\n","      <th>attack</th>\n","      <th>normal</th>\n","    </tr>\n","    <tr>\n","      <th>nbins</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>11055</td>\n","      <td>46636</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1469</td>\n","      <td>9109</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1232</td>\n","      <td>3110</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>996</td>\n","      <td>1167</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>791</td>\n","      <td>389</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>795</td>\n","      <td>186</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>819</td>\n","      <td>615</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>873</td>\n","      <td>859</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>705</td>\n","      <td>169</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>921</td>\n","      <td>126</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f13dedf4-10a9-4325-91f8-9f40c17af871')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f13dedf4-10a9-4325-91f8-9f40c17af871 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f13dedf4-10a9-4325-91f8-9f40c17af871');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a2458a21-e5b8-4164-aa53-36de63611d07\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a2458a21-e5b8-4164-aa53-36de63611d07')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a2458a21-e5b8-4164-aa53-36de63611d07 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"nbins\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1,\n        \"max\": 10,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          9,\n          2,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3202,\n        \"min\": 705,\n        \"max\": 11055,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          705,\n          1469,\n          795\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"normal\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14458,\n        \"min\": 126,\n        \"max\": 46636,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          169,\n          9109,\n          186\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["cnattack = pd.pivot_table(data=c100,index='attack',columns='nbins',values='attk',aggfunc='count')\n","cnattack.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"AlK2Sh0tq87c","executionInfo":{"status":"ok","timestamp":1735537729756,"user_tz":-330,"elapsed":26,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"f2cc0061-62f5-444d-83ce-9e1650862769"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["nbins               1     2   3   4   5   6   7   8    9   10\n","attack                                                       \n","back             945.0  11.0 NaN NaN NaN NaN NaN NaN  NaN NaN\n","buffer_overflow   28.0   NaN NaN NaN NaN NaN NaN NaN  1.0 NaN\n","ftp_write          8.0   NaN NaN NaN NaN NaN NaN NaN  NaN NaN\n","guess_passwd      53.0   NaN NaN NaN NaN NaN NaN NaN  NaN NaN\n","imap              11.0   NaN NaN NaN NaN NaN NaN NaN  NaN NaN"],"text/html":["\n","  <div id=\"df-0f6057df-35db-4a28-a129-0506620190f5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>nbins</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>10</th>\n","    </tr>\n","    <tr>\n","      <th>attack</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>back</th>\n","      <td>945.0</td>\n","      <td>11.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>buffer_overflow</th>\n","      <td>28.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>ftp_write</th>\n","      <td>8.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>guess_passwd</th>\n","      <td>53.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>imap</th>\n","      <td>11.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0f6057df-35db-4a28-a129-0506620190f5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0f6057df-35db-4a28-a129-0506620190f5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0f6057df-35db-4a28-a129-0506620190f5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9af33b61-a577-45b0-a3bf-6426db70d07c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9af33b61-a577-45b0-a3bf-6426db70d07c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9af33b61-a577-45b0-a3bf-6426db70d07c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cnattack","summary":"{\n  \"name\": \"cnattack\",\n  \"rows\": 23,\n  \"fields\": [\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 23,\n        \"samples\": [\n          \"portsweep\",\n          \"neptune\",\n          \"back\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9662.589834627825,\n        \"min\": 2.0,\n        \"max\": 46636.0,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          2484.0,\n          774.0,\n          945.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3160.7819443928743,\n        \"min\": 11.0,\n        \"max\": 9109.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          874.0,\n          417.0,\n          11.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1206.3532926413666,\n        \"min\": 12.0,\n        \"max\": 3110.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          803.0,\n          3110.0,\n          80.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 474.53250678957704,\n        \"min\": 19.0,\n        \"max\": 1167.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          717.0,\n          1167.0,\n          80.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 5,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 226.72660271999925,\n        \"min\": 1.0,\n        \"max\": 585.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          585.0,\n          1.0,\n          30.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 6,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 216.89790224896137,\n        \"min\": 22.0,\n        \"max\": 590.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          590.0,\n          186.0,\n          78.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 7,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 294.6862738574703,\n        \"min\": 14.0,\n        \"max\": 621.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          621.0,\n          615.0,\n          88.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 8,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 365.23547524980694,\n        \"min\": 1.0,\n        \"max\": 859.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1.0,\n          693.0,\n          29.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 9,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 196.07602995728345,\n        \"min\": 1.0,\n        \"max\": 550.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1.0,\n          550.0,\n          32.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 10,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 282.1358166692401,\n        \"min\": 1.0,\n        \"max\": 782.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1.0,\n          782.0,\n          21.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["cnattack.sort_values(5,ascending=False).head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"bG1fz0jsrOJJ","executionInfo":{"status":"ok","timestamp":1735537729756,"user_tz":-330,"elapsed":25,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"a5df0808-53e3-45c0-f912-e5521e78e0c9"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["nbins          1       2       3       4      5      6      7      8      9   \\\n","attack                                                                         \n","neptune     774.0   874.0   803.0   717.0  585.0  590.0  621.0  693.0  550.0   \n","normal    46636.0  9109.0  3110.0  1167.0  389.0  186.0  615.0  859.0  169.0   \n","satan       424.0   417.0   307.0   148.0   80.0   73.0   64.0   48.0   33.0   \n","teardrop     78.0    77.0    80.0    80.0   79.0   78.0   88.0   86.0   81.0   \n","smurf        38.0    30.0    30.0    32.0   30.0   32.0   32.0   29.0   32.0   \n","\n","nbins        10  \n","attack           \n","neptune   782.0  \n","normal    126.0  \n","satan      39.0  \n","teardrop   69.0  \n","smurf      21.0  "],"text/html":["\n","  <div id=\"df-20ac21e0-3102-49a9-ad5f-b655ade03e9a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>nbins</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>10</th>\n","    </tr>\n","    <tr>\n","      <th>attack</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>neptune</th>\n","      <td>774.0</td>\n","      <td>874.0</td>\n","      <td>803.0</td>\n","      <td>717.0</td>\n","      <td>585.0</td>\n","      <td>590.0</td>\n","      <td>621.0</td>\n","      <td>693.0</td>\n","      <td>550.0</td>\n","      <td>782.0</td>\n","    </tr>\n","    <tr>\n","      <th>normal</th>\n","      <td>46636.0</td>\n","      <td>9109.0</td>\n","      <td>3110.0</td>\n","      <td>1167.0</td>\n","      <td>389.0</td>\n","      <td>186.0</td>\n","      <td>615.0</td>\n","      <td>859.0</td>\n","      <td>169.0</td>\n","      <td>126.0</td>\n","    </tr>\n","    <tr>\n","      <th>satan</th>\n","      <td>424.0</td>\n","      <td>417.0</td>\n","      <td>307.0</td>\n","      <td>148.0</td>\n","      <td>80.0</td>\n","      <td>73.0</td>\n","      <td>64.0</td>\n","      <td>48.0</td>\n","      <td>33.0</td>\n","      <td>39.0</td>\n","    </tr>\n","    <tr>\n","      <th>teardrop</th>\n","      <td>78.0</td>\n","      <td>77.0</td>\n","      <td>80.0</td>\n","      <td>80.0</td>\n","      <td>79.0</td>\n","      <td>78.0</td>\n","      <td>88.0</td>\n","      <td>86.0</td>\n","      <td>81.0</td>\n","      <td>69.0</td>\n","    </tr>\n","    <tr>\n","      <th>smurf</th>\n","      <td>38.0</td>\n","      <td>30.0</td>\n","      <td>30.0</td>\n","      <td>32.0</td>\n","      <td>30.0</td>\n","      <td>32.0</td>\n","      <td>32.0</td>\n","      <td>29.0</td>\n","      <td>32.0</td>\n","      <td>21.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-20ac21e0-3102-49a9-ad5f-b655ade03e9a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-20ac21e0-3102-49a9-ad5f-b655ade03e9a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-20ac21e0-3102-49a9-ad5f-b655ade03e9a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7dbb2e2e-e786-4b6c-a5fc-5c1c1a4c5ffb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7dbb2e2e-e786-4b6c-a5fc-5c1c1a4c5ffb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7dbb2e2e-e786-4b6c-a5fc-5c1c1a4c5ffb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"cnattack\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"normal\",\n          \"smurf\",\n          \"satan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20711.48459188766,\n        \"min\": 38.0,\n        \"max\": 46636.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          46636.0,\n          38.0,\n          424.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3931.8909318545448,\n        \"min\": 30.0,\n        \"max\": 9109.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          9109.0,\n          30.0,\n          417.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1291.189180561857,\n        \"min\": 30.0,\n        \"max\": 3110.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3110.0,\n          30.0,\n          307.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 496.47729051790475,\n        \"min\": 32.0,\n        \"max\": 1167.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1167.0,\n          32.0,\n          148.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 5,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 243.19395551699057,\n        \"min\": 30.0,\n        \"max\": 585.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          389.0,\n          30.0,\n          80.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 6,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 229.7807650783677,\n        \"min\": 32.0,\n        \"max\": 590.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          186.0,\n          32.0,\n          73.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 7,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 305.5527777651514,\n        \"min\": 32.0,\n        \"max\": 621.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          615.0,\n          32.0,\n          64.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 8,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 400.13310285453764,\n        \"min\": 29.0,\n        \"max\": 859.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          859.0,\n          29.0,\n          48.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 9,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 217.99655960588,\n        \"min\": 32.0,\n        \"max\": 550.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          169.0,\n          32.0,\n          33.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 10,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 323.67004804275604,\n        \"min\": 21.0,\n        \"max\": 782.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          126.0,\n          21.0,\n          39.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["cnattack.sort_values(10,ascending=False).head(7)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"tw5cIxGTrV8x","executionInfo":{"status":"ok","timestamp":1735537729756,"user_tz":-330,"elapsed":24,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"1360d1ce-76f4-4692-ca95-7db46163d329"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["nbins           1       2       3       4      5      6      7      8      9   \\\n","attack                                                                          \n","neptune      774.0   874.0   803.0   717.0  585.0  590.0  621.0  693.0  550.0   \n","normal     46636.0  9109.0  3110.0  1167.0  389.0  186.0  615.0  859.0  169.0   \n","teardrop      78.0    77.0    80.0    80.0   79.0   78.0   88.0   86.0   81.0   \n","satan        424.0   417.0   307.0   148.0   80.0   73.0   64.0   48.0   33.0   \n","smurf         38.0    30.0    30.0    32.0   30.0   32.0   32.0   29.0   32.0   \n","portsweep   2484.0    21.0    12.0    19.0   16.0   22.0   14.0   16.0    8.0   \n","ipsweep     3597.0     NaN     NaN     NaN    NaN    NaN    NaN    NaN    NaN   \n","\n","nbins         10  \n","attack            \n","neptune    782.0  \n","normal     126.0  \n","teardrop    69.0  \n","satan       39.0  \n","smurf       21.0  \n","portsweep    9.0  \n","ipsweep      1.0  "],"text/html":["\n","  <div id=\"df-4afd5ac2-1084-41b1-9cdb-2dbcc28ec120\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>nbins</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>10</th>\n","    </tr>\n","    <tr>\n","      <th>attack</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>neptune</th>\n","      <td>774.0</td>\n","      <td>874.0</td>\n","      <td>803.0</td>\n","      <td>717.0</td>\n","      <td>585.0</td>\n","      <td>590.0</td>\n","      <td>621.0</td>\n","      <td>693.0</td>\n","      <td>550.0</td>\n","      <td>782.0</td>\n","    </tr>\n","    <tr>\n","      <th>normal</th>\n","      <td>46636.0</td>\n","      <td>9109.0</td>\n","      <td>3110.0</td>\n","      <td>1167.0</td>\n","      <td>389.0</td>\n","      <td>186.0</td>\n","      <td>615.0</td>\n","      <td>859.0</td>\n","      <td>169.0</td>\n","      <td>126.0</td>\n","    </tr>\n","    <tr>\n","      <th>teardrop</th>\n","      <td>78.0</td>\n","      <td>77.0</td>\n","      <td>80.0</td>\n","      <td>80.0</td>\n","      <td>79.0</td>\n","      <td>78.0</td>\n","      <td>88.0</td>\n","      <td>86.0</td>\n","      <td>81.0</td>\n","      <td>69.0</td>\n","    </tr>\n","    <tr>\n","      <th>satan</th>\n","      <td>424.0</td>\n","      <td>417.0</td>\n","      <td>307.0</td>\n","      <td>148.0</td>\n","      <td>80.0</td>\n","      <td>73.0</td>\n","      <td>64.0</td>\n","      <td>48.0</td>\n","      <td>33.0</td>\n","      <td>39.0</td>\n","    </tr>\n","    <tr>\n","      <th>smurf</th>\n","      <td>38.0</td>\n","      <td>30.0</td>\n","      <td>30.0</td>\n","      <td>32.0</td>\n","      <td>30.0</td>\n","      <td>32.0</td>\n","      <td>32.0</td>\n","      <td>29.0</td>\n","      <td>32.0</td>\n","      <td>21.0</td>\n","    </tr>\n","    <tr>\n","      <th>portsweep</th>\n","      <td>2484.0</td>\n","      <td>21.0</td>\n","      <td>12.0</td>\n","      <td>19.0</td>\n","      <td>16.0</td>\n","      <td>22.0</td>\n","      <td>14.0</td>\n","      <td>16.0</td>\n","      <td>8.0</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>ipsweep</th>\n","      <td>3597.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4afd5ac2-1084-41b1-9cdb-2dbcc28ec120')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4afd5ac2-1084-41b1-9cdb-2dbcc28ec120 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4afd5ac2-1084-41b1-9cdb-2dbcc28ec120');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8c18e494-7084-42c1-877d-88dc5f27a643\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8c18e494-7084-42c1-877d-88dc5f27a643')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8c18e494-7084-42c1-877d-88dc5f27a643 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"cnattack\",\n  \"rows\": 7,\n  \"fields\": [\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"neptune\",\n          \"normal\",\n          \"portsweep\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17213.181428915515,\n        \"min\": 38.0,\n        \"max\": 46636.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          774.0,\n          46636.0,\n          2484.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3617.894009871857,\n        \"min\": 21.0,\n        \"max\": 9109.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          874.0,\n          9109.0,\n          21.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1206.3532926413666,\n        \"min\": 12.0,\n        \"max\": 3110.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          803.0,\n          3110.0,\n          12.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 474.53250678957704,\n        \"min\": 19.0,\n        \"max\": 1167.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          717.0,\n          1167.0,\n          19.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 5,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 234.80609021062466,\n        \"min\": 16.0,\n        \"max\": 585.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          585.0,\n          389.0,\n          16.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 6,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 216.89790224896137,\n        \"min\": 22.0,\n        \"max\": 590.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          590.0,\n          186.0,\n          22.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 7,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 294.6862738574703,\n        \"min\": 14.0,\n        \"max\": 621.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          621.0,\n          615.0,\n          14.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 8,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 381.9773553497642,\n        \"min\": 16.0,\n        \"max\": 859.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          693.0,\n          859.0,\n          16.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 9,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 206.28984463613327,\n        \"min\": 8.0,\n        \"max\": 550.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          550.0,\n          169.0,\n          8.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 10,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 282.1358166692401,\n        \"min\": 1.0,\n        \"max\": 782.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          782.0,\n          126.0,\n          9.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["cdf['is_hot'] = cdf['hot'].apply(lambda x: 1 if x > 0 else 0)\n","cdf['is_compromised'] = cdf['numcompromised'].apply(lambda x: 1 if x > 0 else 0)\n","cdf['nroot'] = cdf['numroot'].apply(lambda x: 1 if x > 0 else 0)\n","cdf['fc'] = cdf['numfilecreations'].apply(lambda x: 1 if x > 0 else 0)"],"metadata":{"id":"ieIGiIC_t03u","executionInfo":{"status":"ok","timestamp":1735537730178,"user_tz":-330,"elapsed":445,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["pd.pivot_table(data=cdf,index='bins',columns='loggedin',values='attk',aggfunc='sum',margins=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"yWRGLqAQsq2B","executionInfo":{"status":"ok","timestamp":1735537730179,"user_tz":-330,"elapsed":23,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"1a86d5a5-9306-479f-8df6-d98ca01e68ca"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["loggedin        0       1    All\n","bins                            \n","1         17682.0  1974.0  19656\n","2         16462.0     4.0  16466\n","3         19131.0     2.0  19133\n","4           646.0     NaN    646\n","5          2714.0    15.0   2729\n","All       56635.0  1995.0  58630"],"text/html":["\n","  <div id=\"df-6790b453-de7f-4201-a80b-d558f6e7c732\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>loggedin</th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>All</th>\n","    </tr>\n","    <tr>\n","      <th>bins</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>17682.0</td>\n","      <td>1974.0</td>\n","      <td>19656</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>16462.0</td>\n","      <td>4.0</td>\n","      <td>16466</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>19131.0</td>\n","      <td>2.0</td>\n","      <td>19133</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>646.0</td>\n","      <td>NaN</td>\n","      <td>646</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2714.0</td>\n","      <td>15.0</td>\n","      <td>2729</td>\n","    </tr>\n","    <tr>\n","      <th>All</th>\n","      <td>56635.0</td>\n","      <td>1995.0</td>\n","      <td>58630</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6790b453-de7f-4201-a80b-d558f6e7c732')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6790b453-de7f-4201-a80b-d558f6e7c732 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6790b453-de7f-4201-a80b-d558f6e7c732');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4433303c-c41a-433c-8c2e-b0ec1e5f86d9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4433303c-c41a-433c-8c2e-b0ec1e5f86d9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4433303c-c41a-433c-8c2e-b0ec1e5f86d9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"bins\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1,\n          2,\n          \"All\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20132.57683126198,\n        \"min\": 646.0,\n        \"max\": 56635.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          17682.0,\n          16462.0,\n          56635.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1083.1581140350654,\n        \"min\": 2.0,\n        \"max\": 1995.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4.0,\n          1995.0,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20867,\n        \"min\": 646,\n        \"max\": 58630,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          19656,\n          16466,\n          58630\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["pd.pivot_table(data=cdf,index='bins',columns='is_hot',values='attk',aggfunc='sum',margins=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"IWBUbRBSttu4","executionInfo":{"status":"ok","timestamp":1735537730179,"user_tz":-330,"elapsed":22,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"00889730-59f0-4e1f-9fca-aeeb1ec53267"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["is_hot        0       1    All\n","bins                          \n","1       18248.0  1408.0  19656\n","2       16461.0     5.0  16466\n","3       19133.0     NaN  19133\n","4         646.0     NaN    646\n","5        2727.0     2.0   2729\n","All     57215.0  1415.0  58630"],"text/html":["\n","  <div id=\"df-488c12b4-431c-4cc4-8ec8-8cb0f7322a0d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>is_hot</th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>All</th>\n","    </tr>\n","    <tr>\n","      <th>bins</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>18248.0</td>\n","      <td>1408.0</td>\n","      <td>19656</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>16461.0</td>\n","      <td>5.0</td>\n","      <td>16466</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>19133.0</td>\n","      <td>NaN</td>\n","      <td>19133</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>646.0</td>\n","      <td>NaN</td>\n","      <td>646</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2727.0</td>\n","      <td>2.0</td>\n","      <td>2729</td>\n","    </tr>\n","    <tr>\n","      <th>All</th>\n","      <td>57215.0</td>\n","      <td>1415.0</td>\n","      <td>58630</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-488c12b4-431c-4cc4-8ec8-8cb0f7322a0d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-488c12b4-431c-4cc4-8ec8-8cb0f7322a0d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-488c12b4-431c-4cc4-8ec8-8cb0f7322a0d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cf2b2287-6f1b-4f87-b0ff-481083978ffb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cf2b2287-6f1b-4f87-b0ff-481083978ffb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cf2b2287-6f1b-4f87-b0ff-481083978ffb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"bins\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1,\n          2,\n          \"All\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20342.39399546343,\n        \"min\": 646.0,\n        \"max\": 57215.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          18248.0,\n          16461.0,\n          57215.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 812.9151247209022,\n        \"min\": 2.0,\n        \"max\": 1415.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5.0,\n          1415.0,\n          1408.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20867,\n        \"min\": 646,\n        \"max\": 58630,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          19656,\n          16466,\n          58630\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["pd.pivot_table(data=cdf,index='bins',columns='is_compromised',values='attk',aggfunc='sum',margins=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"OhvVQULxuAzM","executionInfo":{"status":"ok","timestamp":1735537730179,"user_tz":-330,"elapsed":21,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"eae34218-64a7-4ec1-866a-2f114c41d3cd"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["is_compromised        0      1    All\n","bins                                 \n","1               18742.0  914.0  19656\n","2               16466.0    0.0  16466\n","3               19133.0    NaN  19133\n","4                 646.0    NaN    646\n","5                2729.0    NaN   2729\n","All             57716.0  914.0  58630"],"text/html":["\n","  <div id=\"df-bf13328c-20b7-4d6d-8914-9b4932528a6c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>is_compromised</th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>All</th>\n","    </tr>\n","    <tr>\n","      <th>bins</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>18742.0</td>\n","      <td>914.0</td>\n","      <td>19656</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>16466.0</td>\n","      <td>0.0</td>\n","      <td>16466</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>19133.0</td>\n","      <td>NaN</td>\n","      <td>19133</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>646.0</td>\n","      <td>NaN</td>\n","      <td>646</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2729.0</td>\n","      <td>NaN</td>\n","      <td>2729</td>\n","    </tr>\n","    <tr>\n","      <th>All</th>\n","      <td>57716.0</td>\n","      <td>914.0</td>\n","      <td>58630</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bf13328c-20b7-4d6d-8914-9b4932528a6c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bf13328c-20b7-4d6d-8914-9b4932528a6c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bf13328c-20b7-4d6d-8914-9b4932528a6c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bd257a2f-24b9-4ebb-bc27-26017875eea9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bd257a2f-24b9-4ebb-bc27-26017875eea9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bd257a2f-24b9-4ebb-bc27-26017875eea9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"bins\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1,\n          2,\n          \"All\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20526.602501794267,\n        \"min\": 646.0,\n        \"max\": 57716.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          18742.0,\n          16466.0,\n          57716.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 527.698146039318,\n        \"min\": 0.0,\n        \"max\": 914.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          914.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20867,\n        \"min\": 646,\n        \"max\": 58630,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          19656,\n          16466\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["pd.pivot_table(data=cdf,index='bins',columns='nroot',values='attk',aggfunc='sum',margins=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"lj8QE9KvuFQm","executionInfo":{"status":"ok","timestamp":1735537730179,"user_tz":-330,"elapsed":19,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"66cf4e7d-5839-4962-f912-549f77846e44"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["nroot        0     1    All\n","bins                       \n","1      19637.0  19.0  19656\n","2      16466.0   0.0  16466\n","3      19133.0   NaN  19133\n","4        646.0   NaN    646\n","5       2729.0   NaN   2729\n","All    58611.0  19.0  58630"],"text/html":["\n","  <div id=\"df-ab311ce7-dc93-4e7f-b8d6-c7fa773d86df\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>nroot</th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>All</th>\n","    </tr>\n","    <tr>\n","      <th>bins</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>19637.0</td>\n","      <td>19.0</td>\n","      <td>19656</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>16466.0</td>\n","      <td>0.0</td>\n","      <td>16466</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>19133.0</td>\n","      <td>NaN</td>\n","      <td>19133</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>646.0</td>\n","      <td>NaN</td>\n","      <td>646</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2729.0</td>\n","      <td>NaN</td>\n","      <td>2729</td>\n","    </tr>\n","    <tr>\n","      <th>All</th>\n","      <td>58611.0</td>\n","      <td>19.0</td>\n","      <td>58630</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ab311ce7-dc93-4e7f-b8d6-c7fa773d86df')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ab311ce7-dc93-4e7f-b8d6-c7fa773d86df button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ab311ce7-dc93-4e7f-b8d6-c7fa773d86df');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5f5960cd-0aad-4c95-8e3c-1a73231aebd0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5f5960cd-0aad-4c95-8e3c-1a73231aebd0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5f5960cd-0aad-4c95-8e3c-1a73231aebd0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"bins\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1,\n          2,\n          \"All\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20860.299508875705,\n        \"min\": 646.0,\n        \"max\": 58611.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          19637.0,\n          16466.0,\n          58611.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.969655114602888,\n        \"min\": 0.0,\n        \"max\": 19.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          19.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20867,\n        \"min\": 646,\n        \"max\": 58630,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          19656,\n          16466\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["pd.pivot_table(data=cdf,index='bins',columns='fc',values='attk',aggfunc='sum',margins=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"VVkW-iGguGrb","executionInfo":{"status":"ok","timestamp":1735537730619,"user_tz":-330,"elapsed":458,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"35301a0e-43ac-4694-909d-2774ad1c7eec"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["fc          0     1    All\n","bins                      \n","1     19623.0  33.0  19656\n","2     16465.0   1.0  16466\n","3     19133.0   NaN  19133\n","4       646.0   NaN    646\n","5      2729.0   NaN   2729\n","All   58596.0  34.0  58630"],"text/html":["\n","  <div id=\"df-7112dbd0-f416-46a9-a442-e5d56370c5ab\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>fc</th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>All</th>\n","    </tr>\n","    <tr>\n","      <th>bins</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>19623.0</td>\n","      <td>33.0</td>\n","      <td>19656</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>16465.0</td>\n","      <td>1.0</td>\n","      <td>16466</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>19133.0</td>\n","      <td>NaN</td>\n","      <td>19133</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>646.0</td>\n","      <td>NaN</td>\n","      <td>646</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2729.0</td>\n","      <td>NaN</td>\n","      <td>2729</td>\n","    </tr>\n","    <tr>\n","      <th>All</th>\n","      <td>58596.0</td>\n","      <td>34.0</td>\n","      <td>58630</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7112dbd0-f416-46a9-a442-e5d56370c5ab')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7112dbd0-f416-46a9-a442-e5d56370c5ab button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7112dbd0-f416-46a9-a442-e5d56370c5ab');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cdda67c1-b2e7-40ae-9ee8-de561474e116\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cdda67c1-b2e7-40ae-9ee8-de561474e116')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cdda67c1-b2e7-40ae-9ee8-de561474e116 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"bins\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1,\n          2,\n          \"All\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20854.69669882542,\n        \"min\": 646.0,\n        \"max\": 58596.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          19623.0,\n          16465.0,\n          58596.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.77054430040145,\n        \"min\": 1.0,\n        \"max\": 34.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          33.0,\n          1.0,\n          34.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20867,\n        \"min\": 646,\n        \"max\": 58630,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          19656,\n          16466,\n          58630\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["pd.pivot_table(data=cdf,index='bins',columns='rootshell',values='attk',aggfunc='sum',margins=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"8mpugS7vuMgq","executionInfo":{"status":"ok","timestamp":1735537730619,"user_tz":-330,"elapsed":23,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"0eddb022-c710-4a53-e541-7689fe3ea7b7"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["rootshell        0     1    All\n","bins                           \n","1          19624.0  32.0  19656\n","2          16466.0   NaN  16466\n","3          19133.0   NaN  19133\n","4            646.0   NaN    646\n","5           2729.0   NaN   2729\n","All        58598.0  32.0  58630"],"text/html":["\n","  <div id=\"df-e5345de4-b13d-48c3-b751-919ce314dc02\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>rootshell</th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>All</th>\n","    </tr>\n","    <tr>\n","      <th>bins</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>19624.0</td>\n","      <td>32.0</td>\n","      <td>19656</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>16466.0</td>\n","      <td>NaN</td>\n","      <td>16466</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>19133.0</td>\n","      <td>NaN</td>\n","      <td>19133</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>646.0</td>\n","      <td>NaN</td>\n","      <td>646</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2729.0</td>\n","      <td>NaN</td>\n","      <td>2729</td>\n","    </tr>\n","    <tr>\n","      <th>All</th>\n","      <td>58598.0</td>\n","      <td>32.0</td>\n","      <td>58630</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5345de4-b13d-48c3-b751-919ce314dc02')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e5345de4-b13d-48c3-b751-919ce314dc02 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e5345de4-b13d-48c3-b751-919ce314dc02');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-501de0e2-f26c-4361-b496-58b1f52e34ce\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-501de0e2-f26c-4361-b496-58b1f52e34ce')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-501de0e2-f26c-4361-b496-58b1f52e34ce button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"bins\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1,\n          2,\n          \"All\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20855.417422498802,\n        \"min\": 646.0,\n        \"max\": 58598.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          19624.0,\n          16466.0,\n          58598.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 32.0,\n        \"max\": 32.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          32.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20867,\n        \"min\": 646,\n        \"max\": 58630,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          19656\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["pd.pivot_table(data=cdf,index='bins',columns='suattempted',values='attk',aggfunc='sum',margins=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"q1HXouWOuOgX","executionInfo":{"status":"ok","timestamp":1735537730619,"user_tz":-330,"elapsed":21,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"6b0b1de8-bb04-43d2-d928-735d3c491058"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["suattempted        0    1    2    All\n","bins                                 \n","1            19655.0  1.0  0.0  19656\n","2            16466.0  NaN  NaN  16466\n","3            19133.0  NaN  NaN  19133\n","4              646.0  NaN  NaN    646\n","5             2729.0  NaN  NaN   2729\n","All          58629.0  1.0  0.0  58630"],"text/html":["\n","  <div id=\"df-1b2a04b9-a82b-46fd-b173-c0045a565021\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>suattempted</th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>All</th>\n","    </tr>\n","    <tr>\n","      <th>bins</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>19655.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>19656</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>16466.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>16466</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>19133.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>19133</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>646.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>646</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2729.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2729</td>\n","    </tr>\n","    <tr>\n","      <th>All</th>\n","      <td>58629.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>58630</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1b2a04b9-a82b-46fd-b173-c0045a565021')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1b2a04b9-a82b-46fd-b173-c0045a565021 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1b2a04b9-a82b-46fd-b173-c0045a565021');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-67804005-1795-42a8-b0b4-1a7ae3de5754\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-67804005-1795-42a8-b0b4-1a7ae3de5754')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-67804005-1795-42a8-b0b4-1a7ae3de5754 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"bins\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1,\n          2,\n          \"All\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 0,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20867.06100053383,\n        \"min\": 646.0,\n        \"max\": 58629.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          19655.0,\n          16466.0,\n          58629.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20867,\n        \"min\": 646,\n        \"max\": 58630,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          19656\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":[],"metadata":{"id":"7CEsbvO6utMw","executionInfo":{"status":"ok","timestamp":1735537730619,"user_tz":-330,"elapsed":21,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"52aaldiQutQl","executionInfo":{"status":"ok","timestamp":1735537730620,"user_tz":-330,"elapsed":21,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["df['srvcount'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"x-n5U0XEutU5","executionInfo":{"status":"ok","timestamp":1735537730620,"user_tz":-330,"elapsed":21,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"40f3f6e1-8b9e-4e4c-df1b-f784ecf1bd01"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["srvcount\n","1      25398\n","2      12820\n","3       6336\n","4       5526\n","5       4636\n","       ...  \n","407        2\n","413        1\n","503        1\n","501        1\n","498        1\n","Name: count, Length: 509, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>srvcount</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>25398</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>12820</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>6336</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5526</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>4636</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>407</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>413</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>503</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>501</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>498</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>509 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["plt.figure(figsize=(12,5))\n","plt.subplot(1,2,1)\n","sns.boxplot(data=df,x='srvcount')\n","plt.subplot(1,2,2)\n","sns.kdeplot(data=df,x='srvcount')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":482},"id":"1HwU1b5ove9Q","executionInfo":{"status":"ok","timestamp":1735537732558,"user_tz":-330,"elapsed":1959,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"a7c940a1-eca2-45d0-dbbc-39e47ceadc23"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='srvcount', ylabel='Density'>"]},"metadata":{},"execution_count":40},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["np.percentile(df['srvcount'],75),np.percentile(df['srvcount'],50),np.percentile(df['srvcount'],25)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hZwzOdP6vjRn","executionInfo":{"status":"ok","timestamp":1735537732563,"user_tz":-330,"elapsed":79,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"863147a6-46d0-45c9-f92e-d950cef31259"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(18.0, 8.0, 2.0)"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["IQR = np.percentile(df['srvcount'],75)-np.percentile(df['srvcount'],25)\n","ulimit = np.percentile(df['srvcount'],75) + 1.5*IQR\n","ulimit"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vdZ4LHhmxELb","executionInfo":{"status":"ok","timestamp":1735537732564,"user_tz":-330,"elapsed":78,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"27872813-81a2-4115-e633-bb0b06438ebe"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["42.0"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["not_outlier = df[df['srvcount'] <= ulimit]\n","is_outlier = df[df['srvcount'] > ulimit]\n","total_data = df.shape[0]\n","(not_outlier.shape[0]/total_data)*100, (is_outlier.shape[0]/total_data)*100"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ch3lQ2GLxH_J","executionInfo":{"status":"ok","timestamp":1735537732564,"user_tz":-330,"elapsed":72,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"93b87cf2-cdb2-46a0-90a5-9bc2fa0912b6"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(90.43128289395347, 9.568717106046535)"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["pd.DataFrame(df['srvcount'].describe()).T"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":81},"id":"EzOqePXAxXUT","executionInfo":{"status":"ok","timestamp":1735537732564,"user_tz":-330,"elapsed":61,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"7a1775a7-82fa-4098-fc95-6f257ce681d0"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             count       mean       std  min  25%  50%   75%    max\n","srvcount  125973.0  27.737888  72.63584  0.0  2.0  8.0  18.0  511.0"],"text/html":["\n","  <div id=\"df-f29f5569-94a2-48e4-a84b-4aaf2b97ad23\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>srvcount</th>\n","      <td>125973.0</td>\n","      <td>27.737888</td>\n","      <td>72.63584</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","      <td>8.0</td>\n","      <td>18.0</td>\n","      <td>511.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f29f5569-94a2-48e4-a84b-4aaf2b97ad23')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f29f5569-94a2-48e4-a84b-4aaf2b97ad23 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f29f5569-94a2-48e4-a84b-4aaf2b97ad23');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 125973.0,\n        \"max\": 125973.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          125973.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 27.737888277646796,\n        \"max\": 27.737888277646796,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          27.737888277646796\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 72.63583964722693,\n        \"max\": 72.63583964722693,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          72.63583964722693\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"25%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 2.0,\n        \"max\": 2.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"50%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 8.0,\n        \"max\": 8.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          8.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"75%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 18.0,\n        \"max\": 18.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          18.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 511.0,\n        \"max\": 511.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          511.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["# atatcks like neptune, teardrop, satan, smurf has high counts\n","sns.boxplot(data=df,x='srvcount',hue='attack')\n","plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":540},"id":"XFK8X_bpxdiv","executionInfo":{"status":"ok","timestamp":1735537734123,"user_tz":-330,"elapsed":1618,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"a9803678-e5ad-43de-e71e-cab2d3ab09e3"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.legend.Legend at 0x7daae8692170>"]},"metadata":{},"execution_count":45},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["not_outlier['is_attack'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"hI1Yvk-YxyLX","executionInfo":{"status":"ok","timestamp":1735537734124,"user_tz":-330,"elapsed":65,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"625883c4-c6d6-4b55-98bd-5450ed622c47"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["is_attack\n","normal    59165\n","attack    54754\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>is_attack</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>normal</th>\n","      <td>59165</td>\n","    </tr>\n","    <tr>\n","      <th>attack</th>\n","      <td>54754</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["is_outlier['is_attack'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"Q1-isbk8x40K","executionInfo":{"status":"ok","timestamp":1735537734124,"user_tz":-330,"elapsed":63,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"8badd7cc-6522-4e99-963d-72e298f70814"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["is_attack\n","normal    8178\n","attack    3876\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>is_attack</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>normal</th>\n","      <td>8178</td>\n","    </tr>\n","    <tr>\n","      <th>attack</th>\n","      <td>3876</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["df['service'].nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QgEd7iWX0NiV","executionInfo":{"status":"ok","timestamp":1735537734124,"user_tz":-330,"elapsed":59,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"0fad74b3-1519-4f3f-971f-9e6c1caebc31"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["70"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["scdf = df.copy()\n","scdf['attk'] = cdf['attack'].apply(lambda x: 0 if x == 'normal' else 1)\n","scdf['bins'] = None\n","for i in range(len(scdf)):\n","  count = scdf.loc[i,'srvcount']\n","  if count > 0 and count <= 100:\n","    scdf.loc[i,'bins'] = 0\n","  elif count> 100 and count <= 200:\n","    scdf.loc[i,'bins'] = 1\n","  elif count> 200 and count <= 300:\n","    scdf.loc[i,'bins'] = 2\n","  elif count > 300 and count <= 400:\n","    scdf.loc[i,'bins'] = 3\n","  else:\n","    scdf.loc[i,'bins'] = 4"],"metadata":{"id":"mQDmaZjFyM_z","executionInfo":{"status":"ok","timestamp":1735537763639,"user_tz":-330,"elapsed":29571,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}}},"execution_count":49,"outputs":[]},{"cell_type":"code","source":["scdf['bins'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":272},"id":"YT030tDLyv8U","executionInfo":{"status":"ok","timestamp":1735537763640,"user_tz":-330,"elapsed":42,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"5a2038f7-7053-4071-b6d5-5242d35e7a63"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["bins\n","0    116710\n","1      4613\n","2      2332\n","4      1710\n","3       608\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>bins</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>116710</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4613</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2332</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1710</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>608</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["pd.pivot_table(data=scdf,index='bins',columns='is_attack',values='duration',aggfunc='count')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"HMPybRxMyzau","executionInfo":{"status":"ok","timestamp":1735537763640,"user_tz":-330,"elapsed":40,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"b960134a-eb4b-4e8b-d6c7-472c048d0db4"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["is_attack  attack  normal\n","bins                     \n","0           56175   60535\n","1             350    4263\n","2             270    2062\n","3             231     377\n","4            1604     106"],"text/html":["\n","  <div id=\"df-f845af18-3fbe-414e-b75f-c76b156699fc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>is_attack</th>\n","      <th>attack</th>\n","      <th>normal</th>\n","    </tr>\n","    <tr>\n","      <th>bins</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>56175</td>\n","      <td>60535</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>350</td>\n","      <td>4263</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>270</td>\n","      <td>2062</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>231</td>\n","      <td>377</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1604</td>\n","      <td>106</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f845af18-3fbe-414e-b75f-c76b156699fc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f845af18-3fbe-414e-b75f-c76b156699fc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f845af18-3fbe-414e-b75f-c76b156699fc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b96aee81-9256-40b1-8c99-624eab7f7ed8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b96aee81-9256-40b1-8c99-624eab7f7ed8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b96aee81-9256-40b1-8c99-624eab7f7ed8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"bins\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          4,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24854,\n        \"min\": 231,\n        \"max\": 56175,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          350,\n          1604,\n          270\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"normal\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26363,\n        \"min\": 106,\n        \"max\": 60535,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4263,\n          106,\n          2062\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["srv_attack = pd.pivot_table(data=scdf,index='service',columns='is_attack',values='srvcount',aggfunc='count',margins=True).reset_index()\n","srv_attack.sort_values('attack',ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"ikaBXjsl3YZT","executionInfo":{"status":"ok","timestamp":1735537763640,"user_tz":-330,"elapsed":36,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"402772ae-32c6-440d-cd67-19a76c760c8e"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["is_attack  service   attack   normal     All\n","70             All  58630.0  67343.0  125973\n","49         private  20871.0    982.0   21853\n","14           eco_i   4089.0    497.0    4586\n","15           ecr_i   2887.0    190.0    3077\n","24            http   2289.0  38049.0   40338\n","..             ...      ...      ...     ...\n","0              IRC      1.0    186.0     187\n","43           ntp_u      NaN    168.0     168\n","50           red_i      NaN      8.0       8\n","61          tftp_u      NaN      3.0       3\n","64           urh_i      NaN     10.0      10\n","\n","[71 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-f8abb285-e8f9-438d-8cc0-a0c041203030\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>is_attack</th>\n","      <th>service</th>\n","      <th>attack</th>\n","      <th>normal</th>\n","      <th>All</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>70</th>\n","      <td>All</td>\n","      <td>58630.0</td>\n","      <td>67343.0</td>\n","      <td>125973</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>private</td>\n","      <td>20871.0</td>\n","      <td>982.0</td>\n","      <td>21853</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>eco_i</td>\n","      <td>4089.0</td>\n","      <td>497.0</td>\n","      <td>4586</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>ecr_i</td>\n","      <td>2887.0</td>\n","      <td>190.0</td>\n","      <td>3077</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>http</td>\n","      <td>2289.0</td>\n","      <td>38049.0</td>\n","      <td>40338</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>IRC</td>\n","      <td>1.0</td>\n","      <td>186.0</td>\n","      <td>187</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>ntp_u</td>\n","      <td>NaN</td>\n","      <td>168.0</td>\n","      <td>168</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>red_i</td>\n","      <td>NaN</td>\n","      <td>8.0</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>61</th>\n","      <td>tftp_u</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>64</th>\n","      <td>urh_i</td>\n","      <td>NaN</td>\n","      <td>10.0</td>\n","      <td>10</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>71 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f8abb285-e8f9-438d-8cc0-a0c041203030')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f8abb285-e8f9-438d-8cc0-a0c041203030 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f8abb285-e8f9-438d-8cc0-a0c041203030');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8527c06d-8eea-4d0c-85ca-7bf9786b85b3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8527c06d-8eea-4d0c-85ca-7bf9786b85b3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8527c06d-8eea-4d0c-85ca-7bf9786b85b3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"srv_attack\",\n  \"rows\": 71,\n  \"fields\": [\n    {\n      \"column\": \"service\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 71,\n        \"samples\": [\n          \"ctf\",\n          \"All\",\n          \"smtp\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7508.129106132599,\n        \"min\": 1.0,\n        \"max\": 58630.0,\n        \"num_unique_values\": 61,\n        \"samples\": [\n          58630.0,\n          1876.0,\n          306.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"normal\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14514.36345393536,\n        \"min\": 3.0,\n        \"max\": 67343.0,\n        \"num_unique_values\": 24,\n        \"samples\": [\n          545.0,\n          186.0,\n          67343.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15737,\n        \"min\": 1,\n        \"max\": 125973,\n        \"num_unique_values\": 67,\n        \"samples\": [\n          439,\n          689,\n          40338\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["most_attack_service = srv_attack[srv_attack['attack'] > srv_attack['normal']].sort_values(by='All',ascending=False)\n","most_attack_service['attack'] = (most_attack_service['attack']/most_attack_service['All'])*100\n","most_attack_service['normal'] = (most_attack_service['normal']/most_attack_service['All'])*100\n","most_attack_service"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"y4NRshdT4RxC","executionInfo":{"status":"ok","timestamp":1735537763640,"user_tz":-330,"elapsed":34,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"7f881ca2-71e4-45ef-aa01-6289ce4d79cd"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["is_attack  service     attack     normal    All\n","49         private  95.506338   4.493662  21853\n","14           eco_i  89.162669  10.837331   4586\n","15           ecr_i  93.825154   6.174846   3077\n","60          telnet  61.028474  38.971526   2353\n","18          finger  69.156763  30.843237   1767\n","4             auth  75.287958  24.712042    955\n","63            time  88.379205  11.620795    654\n","28           imap4  99.536321   0.463679    647\n","11          domain  93.321617   6.678383    569\n","56             ssh  98.392283   1.607717    311\n","53           shell  93.846154   6.153846     65"],"text/html":["\n","  <div id=\"df-a924f9d5-3a63-4bb8-ad30-5057dcad4331\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>is_attack</th>\n","      <th>service</th>\n","      <th>attack</th>\n","      <th>normal</th>\n","      <th>All</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>49</th>\n","      <td>private</td>\n","      <td>95.506338</td>\n","      <td>4.493662</td>\n","      <td>21853</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>eco_i</td>\n","      <td>89.162669</td>\n","      <td>10.837331</td>\n","      <td>4586</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>ecr_i</td>\n","      <td>93.825154</td>\n","      <td>6.174846</td>\n","      <td>3077</td>\n","    </tr>\n","    <tr>\n","      <th>60</th>\n","      <td>telnet</td>\n","      <td>61.028474</td>\n","      <td>38.971526</td>\n","      <td>2353</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>finger</td>\n","      <td>69.156763</td>\n","      <td>30.843237</td>\n","      <td>1767</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>auth</td>\n","      <td>75.287958</td>\n","      <td>24.712042</td>\n","      <td>955</td>\n","    </tr>\n","    <tr>\n","      <th>63</th>\n","      <td>time</td>\n","      <td>88.379205</td>\n","      <td>11.620795</td>\n","      <td>654</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>imap4</td>\n","      <td>99.536321</td>\n","      <td>0.463679</td>\n","      <td>647</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>domain</td>\n","      <td>93.321617</td>\n","      <td>6.678383</td>\n","      <td>569</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>ssh</td>\n","      <td>98.392283</td>\n","      <td>1.607717</td>\n","      <td>311</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>shell</td>\n","      <td>93.846154</td>\n","      <td>6.153846</td>\n","      <td>65</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a924f9d5-3a63-4bb8-ad30-5057dcad4331')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a924f9d5-3a63-4bb8-ad30-5057dcad4331 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a924f9d5-3a63-4bb8-ad30-5057dcad4331');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d34b9820-d909-41ea-8ecd-495ad2a8e4e6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d34b9820-d909-41ea-8ecd-495ad2a8e4e6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d34b9820-d909-41ea-8ecd-495ad2a8e4e6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_bcd0aef5-7b1f-457c-943c-4f33c1df704c\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('most_attack_service')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_bcd0aef5-7b1f-457c-943c-4f33c1df704c button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('most_attack_service');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"most_attack_service","summary":"{\n  \"name\": \"most_attack_service\",\n  \"rows\": 11,\n  \"fields\": [\n    {\n      \"column\": \"service\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"auth\",\n          \"private\",\n          \"ssh\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.764604718999673,\n        \"min\": 61.028474288142796,\n        \"max\": 99.53632148377125,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          75.28795811518324,\n          95.50633780259004,\n          98.39228295819936\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"normal\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.764604718999674,\n        \"min\": 0.46367851622874806,\n        \"max\": 38.971525711857204,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          24.712041884816756,\n          4.493662197409966,\n          1.607717041800643\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6289,\n        \"min\": 65,\n        \"max\": 21853,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          955,\n          21853,\n          311\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["srv_attack_perc = pd.pivot_table(data=scdf,index='service',columns='is_attack',values='srvcount',aggfunc='count',margins=True,fill_value=0).reset_index()\n","srv_attack_perc['attack'] = (srv_attack_perc['attack']/srv_attack_perc['All'])*100\n","srv_attack_perc['normal'] = (srv_attack_perc['normal']/srv_attack_perc['All'])*100\n","srv_attack_perc.sort_values(['attack'],ascending=False,inplace=True)\n","srv_attack_perc[(srv_attack_perc['attack'] > 50) & (srv_attack_perc['All'] >= 500)]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":833},"id":"WM2Y4tQSSAkx","executionInfo":{"status":"ok","timestamp":1735537764082,"user_tz":-330,"elapsed":474,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"6a144d6f-63e6-48a3-9ba4-28c7501743e8"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["is_attack    service      attack     normal    All\n","29          iso_tsap  100.000000   0.000000    687\n","66              uucp  100.000000   0.000000    780\n","26          http_443  100.000000   0.000000    530\n","41              nnsp  100.000000   0.000000    630\n","58            supdup  100.000000   0.000000    544\n","9            daytime  100.000000   0.000000    521\n","10           discard  100.000000   0.000000    538\n","67         uucp_path  100.000000   0.000000    689\n","69             whois  100.000000   0.000000    693\n","7           csnet_ns  100.000000   0.000000    545\n","6            courier  100.000000   0.000000    734\n","5                bgp  100.000000   0.000000    710\n","68             vmnet  100.000000   0.000000    617\n","21            gopher  100.000000   0.000000    518\n","2             Z39_50  100.000000   0.000000    862\n","8                ctf  100.000000   0.000000    563\n","28             imap4   99.536321   0.463679    647\n","49           private   95.506338   4.493662  21853\n","15             ecr_i   93.825154   6.174846   3077\n","11            domain   93.321617   6.678383    569\n","14             eco_i   89.162669  10.837331   4586\n","63              time   88.379205  11.620795    654\n","4               auth   75.287958  24.712042    955\n","18            finger   69.156763  30.843237   1767\n","60            telnet   61.028474  38.971526   2353"],"text/html":["\n","  <div id=\"df-6dc545ea-4c6a-4cbf-a176-b57308142097\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>is_attack</th>\n","      <th>service</th>\n","      <th>attack</th>\n","      <th>normal</th>\n","      <th>All</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>29</th>\n","      <td>iso_tsap</td>\n","      <td>100.000000</td>\n","      <td>0.000000</td>\n","      <td>687</td>\n","    </tr>\n","    <tr>\n","      <th>66</th>\n","      <td>uucp</td>\n","      <td>100.000000</td>\n","      <td>0.000000</td>\n","      <td>780</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>http_443</td>\n","      <td>100.000000</td>\n","      <td>0.000000</td>\n","      <td>530</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>nnsp</td>\n","      <td>100.000000</td>\n","      <td>0.000000</td>\n","      <td>630</td>\n","    </tr>\n","    <tr>\n","      <th>58</th>\n","      <td>supdup</td>\n","      <td>100.000000</td>\n","      <td>0.000000</td>\n","      <td>544</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>daytime</td>\n","      <td>100.000000</td>\n","      <td>0.000000</td>\n","      <td>521</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>discard</td>\n","      <td>100.000000</td>\n","      <td>0.000000</td>\n","      <td>538</td>\n","    </tr>\n","    <tr>\n","      <th>67</th>\n","      <td>uucp_path</td>\n","      <td>100.000000</td>\n","      <td>0.000000</td>\n","      <td>689</td>\n","    </tr>\n","    <tr>\n","      <th>69</th>\n","      <td>whois</td>\n","      <td>100.000000</td>\n","      <td>0.000000</td>\n","      <td>693</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>csnet_ns</td>\n","      <td>100.000000</td>\n","      <td>0.000000</td>\n","      <td>545</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>courier</td>\n","      <td>100.000000</td>\n","      <td>0.000000</td>\n","      <td>734</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>bgp</td>\n","      <td>100.000000</td>\n","      <td>0.000000</td>\n","      <td>710</td>\n","    </tr>\n","    <tr>\n","      <th>68</th>\n","      <td>vmnet</td>\n","      <td>100.000000</td>\n","      <td>0.000000</td>\n","      <td>617</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>gopher</td>\n","      <td>100.000000</td>\n","      <td>0.000000</td>\n","      <td>518</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Z39_50</td>\n","      <td>100.000000</td>\n","      <td>0.000000</td>\n","      <td>862</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>ctf</td>\n","      <td>100.000000</td>\n","      <td>0.000000</td>\n","      <td>563</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>imap4</td>\n","      <td>99.536321</td>\n","      <td>0.463679</td>\n","      <td>647</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>private</td>\n","      <td>95.506338</td>\n","      <td>4.493662</td>\n","      <td>21853</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>ecr_i</td>\n","      <td>93.825154</td>\n","      <td>6.174846</td>\n","      <td>3077</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>domain</td>\n","      <td>93.321617</td>\n","      <td>6.678383</td>\n","      <td>569</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>eco_i</td>\n","      <td>89.162669</td>\n","      <td>10.837331</td>\n","      <td>4586</td>\n","    </tr>\n","    <tr>\n","      <th>63</th>\n","      <td>time</td>\n","      <td>88.379205</td>\n","      <td>11.620795</td>\n","      <td>654</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>auth</td>\n","      <td>75.287958</td>\n","      <td>24.712042</td>\n","      <td>955</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>finger</td>\n","      <td>69.156763</td>\n","      <td>30.843237</td>\n","      <td>1767</td>\n","    </tr>\n","    <tr>\n","      <th>60</th>\n","      <td>telnet</td>\n","      <td>61.028474</td>\n","      <td>38.971526</td>\n","      <td>2353</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6dc545ea-4c6a-4cbf-a176-b57308142097')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6dc545ea-4c6a-4cbf-a176-b57308142097 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6dc545ea-4c6a-4cbf-a176-b57308142097');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9cba9ca6-b967-4cb9-a7ad-fbdd6b23ae87\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9cba9ca6-b967-4cb9-a7ad-fbdd6b23ae87')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9cba9ca6-b967-4cb9-a7ad-fbdd6b23ae87 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"srv_attack_perc[(srv_attack_perc['attack'] > 50) & (srv_attack_perc['All'] >= 500)]\",\n  \"rows\": 25,\n  \"fields\": [\n    {\n      \"column\": \"service\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 25,\n        \"samples\": [\n          \"whois\",\n          \"imap4\",\n          \"iso_tsap\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.625451304931126,\n        \"min\": 61.028474288142796,\n        \"max\": 100.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          69.15676287492926,\n          99.53632148377125,\n          89.16266899258613\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"normal\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.625451304931126,\n        \"min\": 0.0,\n        \"max\": 38.971525711857204,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          30.843237125070743,\n          0.46367851622874806,\n          10.837331007413868\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4274,\n        \"min\": 518,\n        \"max\": 21853,\n        \"num_unique_values\": 25,\n        \"samples\": [\n          693,\n          647,\n          687\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":54}]},{"cell_type":"code","source":["top10_services = srv_attack_perc[srv_attack_perc['All']> 800]['service'].unique()\n","t1 = scdf[scdf['service'].isin(top10_services)].copy()\n","pd.pivot_table(data=t1[t1['attack']!='normal'],index='attack',columns='service',values='attk',aggfunc='count')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":739},"id":"XsvtqqVMbSMJ","executionInfo":{"status":"ok","timestamp":1735537764083,"user_tz":-330,"elapsed":38,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"48b2e0a4-a283-4b6f-fc52-c93951ac8dba"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["service          Z39_50   auth  domain_u   eco_i   ecr_i  finger    ftp  \\\n","attack                                                                    \n","back                NaN    NaN       NaN     NaN     NaN     NaN    NaN   \n","buffer_overflow     NaN    NaN       NaN     NaN     NaN     NaN    1.0   \n","ftp_write           NaN    NaN       NaN     NaN     NaN     NaN    2.0   \n","guess_passwd        NaN    NaN       NaN     NaN     NaN     NaN    NaN   \n","ipsweep             NaN    NaN       NaN  3090.0    27.0    13.0   11.0   \n","land                NaN    NaN       NaN     NaN     NaN    17.0    NaN   \n","loadmodule          NaN    NaN       NaN     NaN     NaN     NaN    1.0   \n","multihop            NaN    NaN       NaN     NaN     NaN     NaN    2.0   \n","neptune           851.0  703.0       NaN     NaN     NaN  1151.0  489.0   \n","nmap                1.0    1.0       NaN   975.0     6.0     1.0    1.0   \n","perl                NaN    NaN       NaN     NaN     NaN     NaN    NaN   \n","phf                 NaN    NaN       NaN     NaN     NaN     NaN    NaN   \n","pod                 NaN    NaN       NaN     NaN   198.0     NaN    NaN   \n","portsweep           8.0    8.0       NaN     4.0     1.0    13.0   12.0   \n","rootkit             NaN    NaN       NaN     NaN     NaN     NaN    1.0   \n","satan               2.0    7.0       9.0    20.0     9.0    27.0    8.0   \n","smurf               NaN    NaN       NaN     NaN  2646.0     NaN    NaN   \n","spy                 NaN    NaN       NaN     NaN     NaN     NaN    NaN   \n","teardrop            NaN    NaN       NaN     NaN     NaN     NaN    NaN   \n","warezclient         NaN    NaN       NaN     NaN     NaN     NaN  306.0   \n","warezmaster         NaN    NaN       NaN     NaN     NaN     NaN    2.0   \n","\n","service          ftp_data    http   other  private   smtp  telnet  \n","attack                                                             \n","back                  NaN   956.0     NaN      NaN    NaN     NaN  \n","buffer_overflow       8.0     NaN     NaN      NaN    NaN    21.0  \n","ftp_write             4.0     NaN     NaN      NaN    NaN     NaN  \n","guess_passwd          NaN     NaN     NaN      NaN    NaN    53.0  \n","ipsweep              12.0     7.0     NaN    331.0   13.0    13.0  \n","land                  NaN     NaN     NaN      NaN    NaN     1.0  \n","loadmodule            3.0     NaN     NaN      NaN    NaN     5.0  \n","multihop              3.0     NaN     NaN      NaN    NaN     2.0  \n","neptune            1209.0  1299.0    58.0  15079.0  241.0  1311.0  \n","nmap                  1.0     1.0     NaN    468.0    1.0     1.0  \n","perl                  NaN     NaN     NaN      NaN    NaN     3.0  \n","phf                   NaN     4.0     NaN      NaN    NaN     NaN  \n","pod                   NaN     NaN     NaN      NaN    NaN     NaN  \n","portsweep            14.0    15.0   487.0   1947.0   15.0    12.0  \n","rootkit               1.0     NaN     3.0      NaN    NaN     5.0  \n","satan                24.0     7.0  1202.0   2154.0   14.0     7.0  \n","smurf                 NaN     NaN     NaN      NaN    NaN     NaN  \n","spy                   NaN     NaN     NaN      NaN    NaN     2.0  \n","teardrop              NaN     NaN     NaN    892.0    NaN     NaN  \n","warezclient         579.0     NaN     5.0      NaN    NaN     NaN  \n","warezmaster          18.0     NaN     NaN      NaN    NaN     NaN  "],"text/html":["\n","  <div id=\"df-8821ec5b-df58-4a5d-87c1-edf51c086fb7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>service</th>\n","      <th>Z39_50</th>\n","      <th>auth</th>\n","      <th>domain_u</th>\n","      <th>eco_i</th>\n","      <th>ecr_i</th>\n","      <th>finger</th>\n","      <th>ftp</th>\n","      <th>ftp_data</th>\n","      <th>http</th>\n","      <th>other</th>\n","      <th>private</th>\n","      <th>smtp</th>\n","      <th>telnet</th>\n","    </tr>\n","    <tr>\n","      <th>attack</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>back</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>956.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>buffer_overflow</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>8.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>21.0</td>\n","    </tr>\n","    <tr>\n","      <th>ftp_write</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>4.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>guess_passwd</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>53.0</td>\n","    </tr>\n","    <tr>\n","      <th>ipsweep</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3090.0</td>\n","      <td>27.0</td>\n","      <td>13.0</td>\n","      <td>11.0</td>\n","      <td>12.0</td>\n","      <td>7.0</td>\n","      <td>NaN</td>\n","      <td>331.0</td>\n","      <td>13.0</td>\n","      <td>13.0</td>\n","    </tr>\n","    <tr>\n","      <th>land</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>17.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>loadmodule</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>multihop</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>neptune</th>\n","      <td>851.0</td>\n","      <td>703.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1151.0</td>\n","      <td>489.0</td>\n","      <td>1209.0</td>\n","      <td>1299.0</td>\n","      <td>58.0</td>\n","      <td>15079.0</td>\n","      <td>241.0</td>\n","      <td>1311.0</td>\n","    </tr>\n","    <tr>\n","      <th>nmap</th>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>975.0</td>\n","      <td>6.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>468.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>perl</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","    </tr>\n","    <tr>\n","      <th>phf</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>pod</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>198.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>portsweep</th>\n","      <td>8.0</td>\n","      <td>8.0</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>13.0</td>\n","      <td>12.0</td>\n","      <td>14.0</td>\n","      <td>15.0</td>\n","      <td>487.0</td>\n","      <td>1947.0</td>\n","      <td>15.0</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>rootkit</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>satan</th>\n","      <td>2.0</td>\n","      <td>7.0</td>\n","      <td>9.0</td>\n","      <td>20.0</td>\n","      <td>9.0</td>\n","      <td>27.0</td>\n","      <td>8.0</td>\n","      <td>24.0</td>\n","      <td>7.0</td>\n","      <td>1202.0</td>\n","      <td>2154.0</td>\n","      <td>14.0</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>smurf</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2646.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>spy</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>teardrop</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>892.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>warezclient</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>306.0</td>\n","      <td>579.0</td>\n","      <td>NaN</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>warezmaster</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>18.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8821ec5b-df58-4a5d-87c1-edf51c086fb7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8821ec5b-df58-4a5d-87c1-edf51c086fb7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8821ec5b-df58-4a5d-87c1-edf51c086fb7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e81fd8aa-b089-4566-ae32-0051c88bfa51\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e81fd8aa-b089-4566-ae32-0051c88bfa51')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e81fd8aa-b089-4566-ae32-0051c88bfa51 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 21,\n  \"fields\": [\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 21,\n        \"samples\": [\n          \"back\",\n          \"spy\",\n          \"satan\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Z39_50\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 423.6779437261279,\n        \"min\": 1.0,\n        \"max\": 851.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1.0,\n          2.0,\n          851.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"auth\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 348.84702951293707,\n        \"min\": 1.0,\n        \"max\": 703.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1.0,\n          7.0,\n          703.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"domain_u\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 9.0,\n        \"max\": 9.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          9.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"eco_i\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1451.3396971993382,\n        \"min\": 4.0,\n        \"max\": 3090.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          975.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ecr_i\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1063.2251721374296,\n        \"min\": 1.0,\n        \"max\": 2646.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          27.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"finger\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 464.17180727255146,\n        \"min\": 1.0,\n        \"max\": 1151.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          17.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ftp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 158.0738224164056,\n        \"min\": 1.0,\n        \"max\": 489.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ftp_data\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 369.8870425446453,\n        \"min\": 1.0,\n        \"max\": 1209.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          579.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"http\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 555.7538423918752,\n        \"min\": 1.0,\n        \"max\": 1299.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          956.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"other\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 517.0507712014363,\n        \"min\": 3.0,\n        \"max\": 1202.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          487.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"private\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5732.9092352836005,\n        \"min\": 331.0,\n        \"max\": 15079.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          331.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"smtp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 103.12710603910108,\n        \"min\": 1.0,\n        \"max\": 241.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          241.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"telnet\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 360.9916008682693,\n        \"min\": 1.0,\n        \"max\": 1311.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          12.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":[],"metadata":{"id":"7YeGB3gIYRL_","executionInfo":{"status":"ok","timestamp":1735537764084,"user_tz":-330,"elapsed":37,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}}},"execution_count":55,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"R9XXMOlVYRT7","executionInfo":{"status":"ok","timestamp":1735537764084,"user_tz":-330,"elapsed":37,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}}},"execution_count":55,"outputs":[]},{"cell_type":"code","source":["df['serrorrate'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"id":"ldLaeBA8YRaW","executionInfo":{"status":"ok","timestamp":1735537764084,"user_tz":-330,"elapsed":36,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"3edb5109-bb7f-4c12-cc94-af1891405854"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["serrorrate\n","0.00    86829\n","1.00    34439\n","0.50      493\n","0.33      321\n","0.07      305\n","        ...  \n","0.37        1\n","0.30        1\n","0.35        1\n","0.87        1\n","0.36        1\n","Name: count, Length: 89, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>serrorrate</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0.00</th>\n","      <td>86829</td>\n","    </tr>\n","    <tr>\n","      <th>1.00</th>\n","      <td>34439</td>\n","    </tr>\n","    <tr>\n","      <th>0.50</th>\n","      <td>493</td>\n","    </tr>\n","    <tr>\n","      <th>0.33</th>\n","      <td>321</td>\n","    </tr>\n","    <tr>\n","      <th>0.07</th>\n","      <td>305</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>0.37</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>0.30</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>0.35</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>0.87</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>0.36</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>89 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["df['serrorrate'].nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YjseUzZaYyEx","executionInfo":{"status":"ok","timestamp":1735537764084,"user_tz":-330,"elapsed":35,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"d6663b57-8213-47e8-f707-1e151424bce6"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["89"]},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["plt.figure(figsize=(12,5))\n","plt.subplot(1,2,1)\n","sns.boxplot(data=df,x='serrorrate')\n","plt.subplot(1,2,2)\n","sns.kdeplot(data=df,x='serrorrate')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":482},"id":"g5x62GdEYz59","executionInfo":{"status":"ok","timestamp":1735537766196,"user_tz":-330,"elapsed":2139,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"14b3a67b-5347-47b3-8bb6-5828533fcf6b"},"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='serrorrate', ylabel='Density'>"]},"metadata":{},"execution_count":58},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["pd.DataFrame(df['serrorrate'].describe()).T"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":81},"id":"xAdRF5MVZEyp","executionInfo":{"status":"ok","timestamp":1735537766198,"user_tz":-330,"elapsed":53,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"8e42fb79-729e-4326-85af-61b201faa542"},"execution_count":59,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               count      mean       std  min  25%  50%  75%  max\n","serrorrate  125973.0  0.284485  0.446456  0.0  0.0  0.0  1.0  1.0"],"text/html":["\n","  <div id=\"df-57cb4cd7-5d29-425d-8d08-9bb4e981f733\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>serrorrate</th>\n","      <td>125973.0</td>\n","      <td>0.284485</td>\n","      <td>0.446456</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-57cb4cd7-5d29-425d-8d08-9bb4e981f733')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-57cb4cd7-5d29-425d-8d08-9bb4e981f733 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-57cb4cd7-5d29-425d-8d08-9bb4e981f733');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 125973.0,\n        \"max\": 125973.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          125973.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.2844845323998,\n        \"max\": 0.2844845323998,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.2844845323998\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.446455624330718,\n        \"max\": 0.446455624330718,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.446455624330718\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"25%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"50%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"75%\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":59}]},{"cell_type":"code","source":["np.percentile(df['serrorrate'],75),np.percentile(df['serrorrate'],50),np.percentile(df['serrorrate'],25)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lfLnR0W8Y8rU","executionInfo":{"status":"ok","timestamp":1735537766198,"user_tz":-330,"elapsed":51,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"314ff748-8dea-4f31-f1a6-c2e521c5e131"},"execution_count":60,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1.0, 0.0, 0.0)"]},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["IQR = np.percentile(df['serrorrate'],75)-np.percentile(df['serrorrate'],25)\n","ulimit = np.percentile(df['serrorrate'],75) + 1.5*IQR\n","ulimit"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e5QwsgL2Yknf","executionInfo":{"status":"ok","timestamp":1735537766198,"user_tz":-330,"elapsed":47,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"118f5b70-346f-4b04-df7c-dc5117ce6440"},"execution_count":61,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2.5"]},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["not_outlier = df[df['serrorrate'] <= ulimit]\n","is_outlier = df[df['serrorrate'] > ulimit]\n","total_data = df.shape[0]\n","(not_outlier.shape[0]/total_data)*100, (is_outlier.shape[0]/total_data)*100"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TWn4e-HEZK0A","executionInfo":{"status":"ok","timestamp":1735537766199,"user_tz":-330,"elapsed":45,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"ea9f60e3-ad08-4380-9b07-f7042542f42e"},"execution_count":62,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(100.0, 0.0)"]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["df[df['serrorrate']>=0.5]['is_attack'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"Ylx22HkpZfa6","executionInfo":{"status":"ok","timestamp":1735537766199,"user_tz":-330,"elapsed":42,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"90c7e1b8-7ac8-4e43-a4fc-3080a627be6d"},"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/plain":["is_attack\n","attack    34864\n","normal      896\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>is_attack</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>attack</th>\n","      <td>34864</td>\n","    </tr>\n","    <tr>\n","      <th>normal</th>\n","      <td>896</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["df[df['serrorrate']<0.5]['is_attack'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"id":"JYT7AglSZsXA","executionInfo":{"status":"ok","timestamp":1735537766202,"user_tz":-330,"elapsed":44,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"8a794c4b-5f17-42b9-b84e-24117e124215"},"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/plain":["is_attack\n","normal    66447\n","attack    23766\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>is_attack</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>normal</th>\n","      <td>66447</td>\n","    </tr>\n","    <tr>\n","      <th>attack</th>\n","      <td>23766</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["serdf = df.copy()\n","serdf['login_failed'] = serdf['numfailedlogins'].apply(lambda x: 0 if x == 0 else 1)\n","serdf['is_hot'] = serdf['hot'].apply(lambda x: 1 if x > 0 else 0)\n","serdf['is_compromised'] = serdf['numcompromised'].apply(lambda x: 1 if x > 0 else 0)\n","serdf['nroot'] = serdf['numroot'].apply(lambda x: 1 if x > 0 else 0)\n","serdf['fc'] = serdf['numfilecreations'].apply(lambda x: 1 if x > 0 else 0)\n","serdf['attk'] = serdf['attack'].apply(lambda x: 0 if x == 'normal' else 1)"],"metadata":{"id":"B_nsv3LgZuwg","executionInfo":{"status":"ok","timestamp":1735537766567,"user_tz":-330,"elapsed":407,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["serdf['bins'] = None\n","for i in range(len(serdf)):\n","  ser = serdf.loc[i,'serrorrate']\n","  if ser < 0.25:\n","    serdf.loc[i,'bins'] = 1\n","  elif ser >= 0.25 and ser < 0.5:\n","    serdf.loc[i,'bins'] = 2\n","  elif ser >= 0.5 and ser < 0.75:\n","    serdf.loc[i,'bins'] = 3\n","  else:\n","    serdf.loc[i,'bins'] = 4"],"metadata":{"id":"wqR6qVAaZ5bM","executionInfo":{"status":"ok","timestamp":1735537797705,"user_tz":-330,"elapsed":31141,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}}},"execution_count":66,"outputs":[]},{"cell_type":"code","source":["serdf['bins'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"FT-ktXbbagpn","executionInfo":{"status":"ok","timestamp":1735537797705,"user_tz":-330,"elapsed":76,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"4622afb3-5c6e-4b71-8d2b-86fbb78de16b"},"execution_count":67,"outputs":[{"output_type":"execute_result","data":{"text/plain":["bins\n","1    89654\n","4    35097\n","3      663\n","2      559\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>bins</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>89654</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>35097</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>663</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>559</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["pd.pivot_table(data=serdf,index='bins',columns='is_attack',values='attk',aggfunc='count')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"dv8n7K_yakfI","executionInfo":{"status":"ok","timestamp":1735537797705,"user_tz":-330,"elapsed":73,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"9955ceba-eaab-4f7f-f44c-0c904be5fd85"},"execution_count":68,"outputs":[{"output_type":"execute_result","data":{"text/plain":["is_attack  attack  normal\n","bins                     \n","1           23727   65927\n","2              39     520\n","3             204     459\n","4           34660     437"],"text/html":["\n","  <div id=\"df-22774b27-1987-41fb-8ef3-de44bd83c7c8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>is_attack</th>\n","      <th>attack</th>\n","      <th>normal</th>\n","    </tr>\n","    <tr>\n","      <th>bins</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>23727</td>\n","      <td>65927</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>39</td>\n","      <td>520</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>204</td>\n","      <td>459</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>34660</td>\n","      <td>437</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-22774b27-1987-41fb-8ef3-de44bd83c7c8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-22774b27-1987-41fb-8ef3-de44bd83c7c8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-22774b27-1987-41fb-8ef3-de44bd83c7c8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-15abd145-a2e1-4cc9-8e18-59e140f5795e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-15abd145-a2e1-4cc9-8e18-59e140f5795e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-15abd145-a2e1-4cc9-8e18-59e140f5795e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"bins\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 4,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          4,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17368,\n        \"min\": 39,\n        \"max\": 34660,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          39,\n          34660,\n          23727\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"normal\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32727,\n        \"min\": 437,\n        \"max\": 65927,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          520,\n          437,\n          65927\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["pd.pivot_table(data=serdf,index='bins',columns='is_attack',values='attk',aggfunc='sum')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"YE-oYrEIawvc","executionInfo":{"status":"ok","timestamp":1735537797705,"user_tz":-330,"elapsed":70,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"cd787aba-0fbd-4871-ae23-52f28ab4cf41"},"execution_count":69,"outputs":[{"output_type":"execute_result","data":{"text/plain":["is_attack  attack  normal\n","bins                     \n","1           23727       0\n","2              39       0\n","3             204       0\n","4           34660       0"],"text/html":["\n","  <div id=\"df-c269c10e-6000-45b1-9b85-8cb036d2224d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>is_attack</th>\n","      <th>attack</th>\n","      <th>normal</th>\n","    </tr>\n","    <tr>\n","      <th>bins</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>23727</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>39</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>204</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>34660</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c269c10e-6000-45b1-9b85-8cb036d2224d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c269c10e-6000-45b1-9b85-8cb036d2224d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c269c10e-6000-45b1-9b85-8cb036d2224d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d3aec4d5-d105-4982-af5c-8bbf58c74e5d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d3aec4d5-d105-4982-af5c-8bbf58c74e5d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d3aec4d5-d105-4982-af5c-8bbf58c74e5d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"bins\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 4,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          4,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17368,\n        \"min\": 39,\n        \"max\": 34660,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          39,\n          34660,\n          23727\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"normal\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["pd.pivot_table(data=serdf[serdf['attack'] != 'normal'],index='attack',columns='bins',values='attk',aggfunc='count').sort_values(1,ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":770},"id":"VydmorS3bHtH","executionInfo":{"status":"ok","timestamp":1735537797706,"user_tz":-330,"elapsed":69,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"d022e346-7568-43e1-8878-f8f82e00c28d"},"execution_count":70,"outputs":[{"output_type":"execute_result","data":{"text/plain":["bins                  1     2     3        4\n","attack                                      \n","neptune          6888.0   1.0  38.0  34287.0\n","satan            3600.0  33.0   NaN      NaN\n","ipsweep          3598.0   NaN   NaN      1.0\n","portsweep        2792.0   NaN  87.0     52.0\n","smurf            2646.0   NaN   NaN      NaN\n","nmap             1228.0   1.0   4.0    260.0\n","back              946.0   3.0   7.0      NaN\n","warezclient       887.0   NaN   1.0      2.0\n","teardrop          798.0   NaN  61.0     33.0\n","pod               201.0   NaN   NaN      NaN\n","guess_passwd       50.0   NaN   2.0      1.0\n","buffer_overflow    28.0   NaN   NaN      2.0\n","warezmaster        20.0   NaN   NaN      NaN\n","rootkit            10.0   NaN   NaN      NaN\n","loadmodule          9.0   NaN   NaN      NaN\n","ftp_write           8.0   NaN   NaN      NaN\n","multihop            7.0   NaN   NaN      NaN\n","phf                 4.0   NaN   NaN      NaN\n","perl                3.0   NaN   NaN      NaN\n","spy                 2.0   NaN   NaN      NaN\n","imap                2.0   NaN   4.0      5.0\n","land                NaN   1.0   NaN     17.0"],"text/html":["\n","  <div id=\"df-e7b3c538-1408-492f-80ab-01038b304525\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>bins</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","    </tr>\n","    <tr>\n","      <th>attack</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>neptune</th>\n","      <td>6888.0</td>\n","      <td>1.0</td>\n","      <td>38.0</td>\n","      <td>34287.0</td>\n","    </tr>\n","    <tr>\n","      <th>satan</th>\n","      <td>3600.0</td>\n","      <td>33.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>ipsweep</th>\n","      <td>3598.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>portsweep</th>\n","      <td>2792.0</td>\n","      <td>NaN</td>\n","      <td>87.0</td>\n","      <td>52.0</td>\n","    </tr>\n","    <tr>\n","      <th>smurf</th>\n","      <td>2646.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>nmap</th>\n","      <td>1228.0</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>260.0</td>\n","    </tr>\n","    <tr>\n","      <th>back</th>\n","      <td>946.0</td>\n","      <td>3.0</td>\n","      <td>7.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>warezclient</th>\n","      <td>887.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>teardrop</th>\n","      <td>798.0</td>\n","      <td>NaN</td>\n","      <td>61.0</td>\n","      <td>33.0</td>\n","    </tr>\n","    <tr>\n","      <th>pod</th>\n","      <td>201.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>guess_passwd</th>\n","      <td>50.0</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>buffer_overflow</th>\n","      <td>28.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>warezmaster</th>\n","      <td>20.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>rootkit</th>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>loadmodule</th>\n","      <td>9.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>ftp_write</th>\n","      <td>8.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>multihop</th>\n","      <td>7.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>phf</th>\n","      <td>4.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>perl</th>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>spy</th>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>imap</th>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>land</th>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>17.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e7b3c538-1408-492f-80ab-01038b304525')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e7b3c538-1408-492f-80ab-01038b304525 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e7b3c538-1408-492f-80ab-01038b304525');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-573a8d4b-b84b-43d2-aeb4-790f2e9dd63d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-573a8d4b-b84b-43d2-aeb4-790f2e9dd63d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-573a8d4b-b84b-43d2-aeb4-790f2e9dd63d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 22,\n  \"fields\": [\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 22,\n        \"samples\": [\n          \"neptune\",\n          \"rootkit\",\n          \"teardrop\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1805.6784399697049,\n        \"min\": 2.0,\n        \"max\": 6888.0,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          6888.0,\n          4.0,\n          8.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.11382301150188,\n        \"min\": 1.0,\n        \"max\": 33.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.0,\n          33.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32.98917571394766,\n        \"min\": 1.0,\n        \"max\": 87.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          38.0,\n          87.0,\n          61.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10829.684134103101,\n        \"min\": 1.0,\n        \"max\": 34287.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.0,\n          33.0,\n          34287.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":70}]},{"cell_type":"code","source":["pd.pivot_table(data=serdf[serdf['attack'] != 'normal'],index='attack',columns='bins',values='attk',aggfunc='count').sort_values(2,ascending=False).head(6)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"k4oMP4ZwdnhU","executionInfo":{"status":"ok","timestamp":1735537797706,"user_tz":-330,"elapsed":67,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"cd0c1fd5-dc65-41de-99dd-65ce6a2f142a"},"execution_count":71,"outputs":[{"output_type":"execute_result","data":{"text/plain":["bins                  1     2     3        4\n","attack                                      \n","satan            3600.0  33.0   NaN      NaN\n","back              946.0   3.0   7.0      NaN\n","land                NaN   1.0   NaN     17.0\n","neptune          6888.0   1.0  38.0  34287.0\n","nmap             1228.0   1.0   4.0    260.0\n","buffer_overflow    28.0   NaN   NaN      2.0"],"text/html":["\n","  <div id=\"df-ffc7e1fa-bcbc-4720-b89c-7aa9ecaa66eb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>bins</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","    </tr>\n","    <tr>\n","      <th>attack</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>satan</th>\n","      <td>3600.0</td>\n","      <td>33.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>back</th>\n","      <td>946.0</td>\n","      <td>3.0</td>\n","      <td>7.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>land</th>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>17.0</td>\n","    </tr>\n","    <tr>\n","      <th>neptune</th>\n","      <td>6888.0</td>\n","      <td>1.0</td>\n","      <td>38.0</td>\n","      <td>34287.0</td>\n","    </tr>\n","    <tr>\n","      <th>nmap</th>\n","      <td>1228.0</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>260.0</td>\n","    </tr>\n","    <tr>\n","      <th>buffer_overflow</th>\n","      <td>28.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ffc7e1fa-bcbc-4720-b89c-7aa9ecaa66eb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ffc7e1fa-bcbc-4720-b89c-7aa9ecaa66eb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ffc7e1fa-bcbc-4720-b89c-7aa9ecaa66eb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d541597a-d80e-40ca-9dbf-9371b384de5d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d541597a-d80e-40ca-9dbf-9371b384de5d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d541597a-d80e-40ca-9dbf-9371b384de5d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"satan\",\n          \"back\",\n          \"buffer_overflow\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2765.908892208852,\n        \"min\": 28.0,\n        \"max\": 6888.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          946.0,\n          28.0,\n          6888.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.11382301150188,\n        \"min\": 1.0,\n        \"max\": 33.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          33.0,\n          3.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.823743871327334,\n        \"min\": 4.0,\n        \"max\": 38.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          7.0,\n          38.0,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17097.40889725692,\n        \"min\": 2.0,\n        \"max\": 34287.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          34287.0,\n          2.0,\n          17.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["pd.pivot_table(data=serdf[serdf['attack'] != 'normal'],index='attack',columns='bins',values='attk',aggfunc='count').sort_values(3,ascending=False).head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"K6inxLB2dsUh","executionInfo":{"status":"ok","timestamp":1735537797706,"user_tz":-330,"elapsed":64,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"ab6a11ef-6e74-40fb-fbec-cd319c21297e"},"execution_count":72,"outputs":[{"output_type":"execute_result","data":{"text/plain":["bins                  1    2     3        4\n","attack                                     \n","portsweep        2792.0  NaN  87.0     52.0\n","teardrop          798.0  NaN  61.0     33.0\n","neptune          6888.0  1.0  38.0  34287.0\n","back              946.0  3.0   7.0      NaN\n","imap                2.0  NaN   4.0      5.0\n","nmap             1228.0  1.0   4.0    260.0\n","guess_passwd       50.0  NaN   2.0      1.0\n","warezclient       887.0  NaN   1.0      2.0\n","buffer_overflow    28.0  NaN   NaN      2.0\n","ftp_write           8.0  NaN   NaN      NaN"],"text/html":["\n","  <div id=\"df-85736748-cf0b-4a64-b8b5-1207b4391a33\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>bins</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","    </tr>\n","    <tr>\n","      <th>attack</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>portsweep</th>\n","      <td>2792.0</td>\n","      <td>NaN</td>\n","      <td>87.0</td>\n","      <td>52.0</td>\n","    </tr>\n","    <tr>\n","      <th>teardrop</th>\n","      <td>798.0</td>\n","      <td>NaN</td>\n","      <td>61.0</td>\n","      <td>33.0</td>\n","    </tr>\n","    <tr>\n","      <th>neptune</th>\n","      <td>6888.0</td>\n","      <td>1.0</td>\n","      <td>38.0</td>\n","      <td>34287.0</td>\n","    </tr>\n","    <tr>\n","      <th>back</th>\n","      <td>946.0</td>\n","      <td>3.0</td>\n","      <td>7.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>imap</th>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>nmap</th>\n","      <td>1228.0</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>260.0</td>\n","    </tr>\n","    <tr>\n","      <th>guess_passwd</th>\n","      <td>50.0</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>warezclient</th>\n","      <td>887.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>buffer_overflow</th>\n","      <td>28.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>ftp_write</th>\n","      <td>8.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-85736748-cf0b-4a64-b8b5-1207b4391a33')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-85736748-cf0b-4a64-b8b5-1207b4391a33 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-85736748-cf0b-4a64-b8b5-1207b4391a33');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cfb7d230-a286-4fd7-84d8-c473df047d45\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cfb7d230-a286-4fd7-84d8-c473df047d45')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cfb7d230-a286-4fd7-84d8-c473df047d45 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"buffer_overflow\",\n          \"teardrop\",\n          \"nmap\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2121.3234888730303,\n        \"min\": 2.0,\n        \"max\": 6888.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          28.0,\n          798.0,\n          1228.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1547005383792517,\n        \"min\": 1.0,\n        \"max\": 3.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          3.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32.98917571394766,\n        \"min\": 1.0,\n        \"max\": 87.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          87.0,\n          61.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12104.670146565039,\n        \"min\": 1.0,\n        \"max\": 34287.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          52.0,\n          33.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["pd.pivot_table(data=serdf[serdf['attack'] != 'normal'],index='attack',columns='bins',values='attk',aggfunc='count').sort_values(4,ascending=False).head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"kZ2E2ykqd26B","executionInfo":{"status":"ok","timestamp":1735537798126,"user_tz":-330,"elapsed":482,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"98dc112a-ff7d-4a22-bb5e-5a45db35d9f8"},"execution_count":73,"outputs":[{"output_type":"execute_result","data":{"text/plain":["bins                  1    2     3        4\n","attack                                     \n","neptune          6888.0  1.0  38.0  34287.0\n","nmap             1228.0  1.0   4.0    260.0\n","portsweep        2792.0  NaN  87.0     52.0\n","teardrop          798.0  NaN  61.0     33.0\n","land                NaN  1.0   NaN     17.0\n","imap                2.0  NaN   4.0      5.0\n","buffer_overflow    28.0  NaN   NaN      2.0\n","warezclient       887.0  NaN   1.0      2.0\n","guess_passwd       50.0  NaN   2.0      1.0\n","ipsweep          3598.0  NaN   NaN      1.0"],"text/html":["\n","  <div id=\"df-b3f091f4-4e1e-46a6-9eca-6b0c114c0538\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>bins</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","    </tr>\n","    <tr>\n","      <th>attack</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>neptune</th>\n","      <td>6888.0</td>\n","      <td>1.0</td>\n","      <td>38.0</td>\n","      <td>34287.0</td>\n","    </tr>\n","    <tr>\n","      <th>nmap</th>\n","      <td>1228.0</td>\n","      <td>1.0</td>\n","      <td>4.0</td>\n","      <td>260.0</td>\n","    </tr>\n","    <tr>\n","      <th>portsweep</th>\n","      <td>2792.0</td>\n","      <td>NaN</td>\n","      <td>87.0</td>\n","      <td>52.0</td>\n","    </tr>\n","    <tr>\n","      <th>teardrop</th>\n","      <td>798.0</td>\n","      <td>NaN</td>\n","      <td>61.0</td>\n","      <td>33.0</td>\n","    </tr>\n","    <tr>\n","      <th>land</th>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>17.0</td>\n","    </tr>\n","    <tr>\n","      <th>imap</th>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>buffer_overflow</th>\n","      <td>28.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>warezclient</th>\n","      <td>887.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>guess_passwd</th>\n","      <td>50.0</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>ipsweep</th>\n","      <td>3598.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b3f091f4-4e1e-46a6-9eca-6b0c114c0538')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b3f091f4-4e1e-46a6-9eca-6b0c114c0538 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b3f091f4-4e1e-46a6-9eca-6b0c114c0538');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-89d07297-667b-49a6-a8e9-14cc5d2a0972\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-89d07297-667b-49a6-a8e9-14cc5d2a0972')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-89d07297-667b-49a6-a8e9-14cc5d2a0972 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"guess_passwd\",\n          \"nmap\",\n          \"imap\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2283.2021616823845,\n        \"min\": 2.0,\n        \"max\": 6888.0,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          50.0,\n          1228.0,\n          28.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 34.705564258144406,\n        \"min\": 1.0,\n        \"max\": 87.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          38.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10829.684134103101,\n        \"min\": 1.0,\n        \"max\": 34287.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          260.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["aperc = pd.pivot_table(data=serdf[serdf['attack'] != 'normal'],index='attack',columns='bins',values='attk',aggfunc='count',margins=True)\n","aperc[1] = (aperc[1]/aperc['All'])*100\n","aperc[2] = (aperc[2]/aperc['All'])*100\n","aperc[3] = (aperc[3]/aperc['All'])*100\n","aperc[4] = (aperc[4]/aperc['All'])*100\n","aperc"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":802},"id":"RTsNAuMEjXSN","executionInfo":{"status":"ok","timestamp":1735537798127,"user_tz":-330,"elapsed":48,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"c1a57fd1-0ee0-44b4-ea66-d9ecb6a64efb"},"execution_count":74,"outputs":[{"output_type":"execute_result","data":{"text/plain":["bins                      1         2          3          4    All\n","attack                                                            \n","back              98.953975  0.313808   0.732218        NaN    956\n","buffer_overflow   93.333333       NaN        NaN   6.666667     30\n","ftp_write        100.000000       NaN        NaN        NaN      8\n","guess_passwd      94.339623       NaN   3.773585   1.886792     53\n","imap              18.181818       NaN  36.363636  45.454545     11\n","ipsweep           99.972215       NaN        NaN   0.027785   3599\n","land                    NaN  5.555556        NaN  94.444444     18\n","loadmodule       100.000000       NaN        NaN        NaN      9\n","multihop         100.000000       NaN        NaN        NaN      7\n","neptune           16.712768  0.002426   0.092202  83.192604  41214\n","nmap              82.250502  0.066979   0.267917  17.414601   1493\n","perl             100.000000       NaN        NaN        NaN      3\n","phf              100.000000       NaN        NaN        NaN      4\n","pod              100.000000       NaN        NaN        NaN    201\n","portsweep         95.257591       NaN   2.968270   1.774139   2931\n","rootkit          100.000000       NaN        NaN        NaN     10\n","satan             99.091660  0.908340        NaN        NaN   3633\n","smurf            100.000000       NaN        NaN        NaN   2646\n","spy              100.000000       NaN        NaN        NaN      2\n","teardrop          89.461883       NaN   6.838565   3.699552    892\n","warezclient       99.662921       NaN   0.112360   0.224719    890\n","warezmaster      100.000000       NaN        NaN        NaN     20\n","All               40.469043  0.066519   0.347945  59.116493  58630"],"text/html":["\n","  <div id=\"df-5baa2cc7-dfea-475a-a324-4be0fdfc6cdb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>bins</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>All</th>\n","    </tr>\n","    <tr>\n","      <th>attack</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>back</th>\n","      <td>98.953975</td>\n","      <td>0.313808</td>\n","      <td>0.732218</td>\n","      <td>NaN</td>\n","      <td>956</td>\n","    </tr>\n","    <tr>\n","      <th>buffer_overflow</th>\n","      <td>93.333333</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6.666667</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>ftp_write</th>\n","      <td>100.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>guess_passwd</th>\n","      <td>94.339623</td>\n","      <td>NaN</td>\n","      <td>3.773585</td>\n","      <td>1.886792</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>imap</th>\n","      <td>18.181818</td>\n","      <td>NaN</td>\n","      <td>36.363636</td>\n","      <td>45.454545</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>ipsweep</th>\n","      <td>99.972215</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.027785</td>\n","      <td>3599</td>\n","    </tr>\n","    <tr>\n","      <th>land</th>\n","      <td>NaN</td>\n","      <td>5.555556</td>\n","      <td>NaN</td>\n","      <td>94.444444</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>loadmodule</th>\n","      <td>100.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>multihop</th>\n","      <td>100.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>neptune</th>\n","      <td>16.712768</td>\n","      <td>0.002426</td>\n","      <td>0.092202</td>\n","      <td>83.192604</td>\n","      <td>41214</td>\n","    </tr>\n","    <tr>\n","      <th>nmap</th>\n","      <td>82.250502</td>\n","      <td>0.066979</td>\n","      <td>0.267917</td>\n","      <td>17.414601</td>\n","      <td>1493</td>\n","    </tr>\n","    <tr>\n","      <th>perl</th>\n","      <td>100.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>phf</th>\n","      <td>100.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>pod</th>\n","      <td>100.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>201</td>\n","    </tr>\n","    <tr>\n","      <th>portsweep</th>\n","      <td>95.257591</td>\n","      <td>NaN</td>\n","      <td>2.968270</td>\n","      <td>1.774139</td>\n","      <td>2931</td>\n","    </tr>\n","    <tr>\n","      <th>rootkit</th>\n","      <td>100.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>satan</th>\n","      <td>99.091660</td>\n","      <td>0.908340</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3633</td>\n","    </tr>\n","    <tr>\n","      <th>smurf</th>\n","      <td>100.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2646</td>\n","    </tr>\n","    <tr>\n","      <th>spy</th>\n","      <td>100.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>teardrop</th>\n","      <td>89.461883</td>\n","      <td>NaN</td>\n","      <td>6.838565</td>\n","      <td>3.699552</td>\n","      <td>892</td>\n","    </tr>\n","    <tr>\n","      <th>warezclient</th>\n","      <td>99.662921</td>\n","      <td>NaN</td>\n","      <td>0.112360</td>\n","      <td>0.224719</td>\n","      <td>890</td>\n","    </tr>\n","    <tr>\n","      <th>warezmaster</th>\n","      <td>100.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>All</th>\n","      <td>40.469043</td>\n","      <td>0.066519</td>\n","      <td>0.347945</td>\n","      <td>59.116493</td>\n","      <td>58630</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5baa2cc7-dfea-475a-a324-4be0fdfc6cdb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5baa2cc7-dfea-475a-a324-4be0fdfc6cdb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5baa2cc7-dfea-475a-a324-4be0fdfc6cdb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e5ddbe28-b024-4ade-94e6-60cdee65d943\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e5ddbe28-b024-4ade-94e6-60cdee65d943')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e5ddbe28-b024-4ade-94e6-60cdee65d943 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_612ca596-5b85-45ae-bd04-84736985098e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('aperc')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_612ca596-5b85-45ae-bd04-84736985098e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('aperc');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"aperc","summary":"{\n  \"name\": \"aperc\",\n  \"rows\": 23,\n  \"fields\": [\n    {\n      \"column\": \"attack\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 23,\n        \"samples\": [\n          \"rootkit\",\n          \"neptune\",\n          \"back\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.123673639641463,\n        \"min\": 16.712767506187216,\n        \"max\": 100.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          99.6629213483146,\n          99.0916597853014,\n          98.9539748953975\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.183130630054149,\n        \"min\": 0.0024263599747658565,\n        \"max\": 5.555555555555555,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.3138075313807531,\n          5.555555555555555,\n          0.06651884700665188\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.716569789745689,\n        \"min\": 0.09220167904110253,\n        \"max\": 36.36363636363637,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          0.11235955056179776,\n          3.7735849056603774,\n          2.968270214943705\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35.79399116314147,\n        \"min\": 0.02778549597110308,\n        \"max\": 94.44444444444444,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          83.19260445479692,\n          6.666666666666667,\n          0.22471910112359553\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14436,\n        \"min\": 2,\n        \"max\": 58630,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          10,\n          41214,\n          956\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["pd.pivot_table(data=serdf[serdf['attack'] != 'normal'],index='flag',columns='bins',values='attk',aggfunc='count',margins=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":457},"id":"zS-X7BGRj7OG","executionInfo":{"status":"ok","timestamp":1735537798127,"user_tz":-330,"elapsed":45,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"36e7636b-7cf8-4c30-a931-33215daf5938"},"execution_count":75,"outputs":[{"output_type":"execute_result","data":{"text/plain":["bins          1     2      3        4    All\n","flag                                        \n","OTH        35.0   NaN    NaN      NaN     35\n","REJ      8514.0  21.0    4.0      1.0   8540\n","RSTO     1340.0   NaN    1.0      2.0   1343\n","RSTOS0     20.0   NaN   61.0     22.0    103\n","RSTR     2275.0   NaN    NaN      NaN   2275\n","S0         91.0  14.0   60.0  34332.0  34497\n","S1          1.0   NaN    2.0      1.0      4\n","S2          4.0   1.0    2.0      1.0      8\n","S3          1.0   NaN    1.0      2.0      4\n","SF      11445.0   2.0   70.0     35.0  11552\n","SH          1.0   1.0    3.0    264.0    269\n","All     23727.0  39.0  204.0  34660.0  58630"],"text/html":["\n","  <div id=\"df-d09a46d1-3dab-4a88-a414-75aa0960dc72\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>bins</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>All</th>\n","    </tr>\n","    <tr>\n","      <th>flag</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>OTH</th>\n","      <td>35.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>REJ</th>\n","      <td>8514.0</td>\n","      <td>21.0</td>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>8540</td>\n","    </tr>\n","    <tr>\n","      <th>RSTO</th>\n","      <td>1340.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>1343</td>\n","    </tr>\n","    <tr>\n","      <th>RSTOS0</th>\n","      <td>20.0</td>\n","      <td>NaN</td>\n","      <td>61.0</td>\n","      <td>22.0</td>\n","      <td>103</td>\n","    </tr>\n","    <tr>\n","      <th>RSTR</th>\n","      <td>2275.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2275</td>\n","    </tr>\n","    <tr>\n","      <th>S0</th>\n","      <td>91.0</td>\n","      <td>14.0</td>\n","      <td>60.0</td>\n","      <td>34332.0</td>\n","      <td>34497</td>\n","    </tr>\n","    <tr>\n","      <th>S1</th>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>S2</th>\n","      <td>4.0</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>S3</th>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>SF</th>\n","      <td>11445.0</td>\n","      <td>2.0</td>\n","      <td>70.0</td>\n","      <td>35.0</td>\n","      <td>11552</td>\n","    </tr>\n","    <tr>\n","      <th>SH</th>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>3.0</td>\n","      <td>264.0</td>\n","      <td>269</td>\n","    </tr>\n","    <tr>\n","      <th>All</th>\n","      <td>23727.0</td>\n","      <td>39.0</td>\n","      <td>204.0</td>\n","      <td>34660.0</td>\n","      <td>58630</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d09a46d1-3dab-4a88-a414-75aa0960dc72')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d09a46d1-3dab-4a88-a414-75aa0960dc72 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d09a46d1-3dab-4a88-a414-75aa0960dc72');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7b1fb65f-5d4b-4d3c-920a-e73375fec9e6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7b1fb65f-5d4b-4d3c-920a-e73375fec9e6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7b1fb65f-5d4b-4d3c-920a-e73375fec9e6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"pd\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"flag\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"SH\",\n          \"SF\",\n          \"OTH\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7297.390922290464,\n        \"min\": 1.0,\n        \"max\": 23727.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          11445.0,\n          8514.0,\n          91.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15.165750888103101,\n        \"min\": 1.0,\n        \"max\": 39.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          14.0,\n          39.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 64.31312290487672,\n        \"min\": 1.0,\n        \"max\": 204.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.0,\n          70.0,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14527.93095309094,\n        \"min\": 1.0,\n        \"max\": 34660.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1.0,\n          2.0,\n          264.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18328,\n        \"min\": 4,\n        \"max\": 58630,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          34497,\n          35,\n          269\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["ap1 = pd.pivot_table(data=serdf,index='flag',columns='bins',values='attk',aggfunc='sum',fill_value=0,margins=True)\n","ap2 = df['flag'].value_counts()\n","aflag_perc = pd.merge(ap1,ap2,left_index=True,right_index=True)\n","aflag_perc[1] = (aflag_perc[1]/aflag_perc['count'])*100\n","aflag_perc[2] = (aflag_perc[2]/aflag_perc['count'])*100\n","aflag_perc[3] = (aflag_perc[3]/aflag_perc['count'])*100\n","aflag_perc[4] = (aflag_perc[4]/aflag_perc['count'])*100\n","#aflag_perc.drop(['All','count'],axis=1,inplace=True)\n","aflag_perc"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":425},"id":"C5gClIkrk6cs","executionInfo":{"status":"ok","timestamp":1735537798163,"user_tz":-330,"elapsed":77,"user":{"displayName":"Vamsi Krishna","userId":"09981900051289340897"}},"outputId":"13676612-3068-4a16-fb26-43047a7944ef"},"execution_count":76,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                1         2          3          4    All  count\n","flag                                                           \n","OTH     76.086957  0.000000   0.000000   0.000000     35     46\n","REJ     75.794534  0.186949   0.035609   0.008902   8540  11233\n","RSTO    85.787452  0.000000   0.064020   0.128041   1343   1562\n","RSTOS0  19.417476  0.000000  59.223301  21.359223    103    103\n","RSTR    93.969434  0.000000   0.000000   0.000000   2275   2421\n","S0       0.261112  0.040171   0.172161  98.510803  34497  34851\n","S1       0.273973  0.000000   0.547945   0.273973      4    365\n","S2       3.149606  0.787402   1.574803   0.787402      8    127\n","S3       2.040816  0.000000   2.040816   4.081633      4     49\n","SF      15.271199  0.002669   0.093402   0.046701  11552  74945\n","SH       0.369004  0.369004   1.107011  97.416974    269    271"],"text/html":["\n","  <div id=\"df-bf8a31f7-2600-46a4-81ab-0b90d0f2846b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>All</th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>flag</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>OTH</th>\n","      <td>76.086957</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>35</td>\n","      <td>46</td>\n","    </tr>\n","    <tr>\n","      <th>REJ</th>\n","      <td>75.794534</td>\n","      <td>0.186949</td>\n","      <td>0.035609</td>\n","      <td>0.008902</td>\n","      <td>8540</td>\n","      <td>11233</td>\n","    </tr>\n","    <tr>\n","      <th>RSTO</th>\n","      <td>85.787452</td>\n","      <td>0.000000</td>\n","      <td>0.064020</td>\n","      <td>0.128041</td>\n","      <td>1343</td>\n","      <td>1562</td>\n","    </tr>\n","    <tr>\n","      <th>RSTOS0</th>\n","      <td>19.417476</td>\n","      <td>0.000000</td>\n","      <td>59.223301</td>\n","      <td>21.359223</td>\n","      <td>103</td>\n","      <td>103</td>\n","    </tr>\n","    <tr>\n","      <th>RSTR</th>\n","      <td>93.969434</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2275</td>\n","      <td>2421</td>\n","    </tr>\n","    <tr>\n","      <th>S0</th>\n","      <td>0.261112</td>\n","      <td>0.040171</td>\n","      <td>0.172161</td>\n","      <td>98.510803</td>\n","      <td>34497</td>\n","      <td>34851</td>\n","    </tr>\n","    <tr>\n","      <th>S1</th>\n","      <td>0.273973</td>\n","      <td>0.000000</td>\n","      <td>0.547945</td>\n","      <td>0.273973</td>\n","      <td>4</td>\n","      <td>365</td>\n","    </tr>\n","    <tr>\n","      <th>S2</th>\n","      <td>3.149606</td>\n","      <td>0.787402</td>\n","      <td>1.574803</td>\n","      <td>0.787402</td>\n","      <td>8</td>\n","      <td>127</td>\n","    </tr>\n","    <tr>\n","      <th>S3</th>\n","      <td>2.040816</td>\n","      <td>0.000000</td>\n","      <td>2.040816</td>\n","      <td>4.081633</td>\n","      <td>4</td>\n","      <td>49</td>\n","    </tr>\n","    <tr>\n","      <th>SF</th>\n","      <td>15.271199</td>\n","      <td>0.002669</td>\n","      <td>0.093402</td>\n","      <td>0.046701</td>\n","      <td>11552</td>\n","      <td>74945</td>\n","    </tr>\n","    <tr>\n","      <th>SH</th>\n","      <td>0.369004</td>\n","      <td>0.369004</td>\n","      <td>1.107011</td>\n","      <td>97.416974</td>\n","      <td>269</td>\n","      <td>271</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bf8a31f7-2600-46a4-81ab-0b90d0f2846b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bf8a31f7-2600-46a4-81ab-0b90d0f2846b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bf8a31f7-2600-46a4-81ab-0b90d0f2846b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-80b973b4-670b-4ba0-9b92-0d42dae9aea3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-80b973b4-670b-4ba0-9b92-0d42dae9aea3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-80b973b4-670b-4ba0-9b92-0d42dae9aea3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_247104e6-2d7f-4d3e-bf4d-3f81a63813ca\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('aflag_perc')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_247104e6-2d7f-4d3e-bf4d-3f81a63813ca button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('aflag_perc');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"aflag_perc","summary":"{\n  \"name\": \"aflag_perc\",\n  \"rows\": 11,\n  \"fields\": [\n    {\n      \"column\": \"flag\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"S0\",\n          \"OTH\",\n          \"SF\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 1,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 39.67303535020583,\n        \"min\": 0.2611115893374652,\n        \"max\": 93.969434118133,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          0.2611115893374652,\n          76.08695652173914,\n          15.271198879178064\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 2,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.24860629062976378,\n        \"min\": 0.0,\n        \"max\": 0.7874015748031495,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0.0,\n          0.186949167631087,\n          0.36900369003690037\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 3,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.700809542823926,\n        \"min\": 0.0,\n        \"max\": 59.22330097087378,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.09340182800720528,\n          0.035609365263064185,\n          0.547945205479452\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": 4,\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 38.93952743679586,\n        \"min\": 0.0,\n        \"max\": 98.51080313333908,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.04670091400360264,\n          0.008902341315766046,\n          0.273972602739726\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"All\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10445,\n        \"min\": 4,\n        \"max\": 34497,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          11552,\n          8540,\n          34497\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23501,\n        \"min\": 46,\n        \"max\": 74945,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          34851,\n          46,\n          74945\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":76}]},{"cell_type":"code","source":[],"metadata":{"id":"vXg7Tv6zHdIf"},"execution_count":null,"outputs":[]}]}